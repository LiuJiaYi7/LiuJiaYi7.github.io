{
    "version": "https://jsonfeed.org/version/1",
    "title": "LiuJiaYi7's blog • All posts by \"笔记\" tag",
    "description": "欢迎来到小七的笔记空间，我们在这里一起相互交流学习吧！",
    "home_page_url": "https://LiuJiaYi7.github.io",
    "items": [
        {
            "id": "https://liujiayi7.github.io/2022/03/09/MarkText%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E8%AE%B0/",
            "url": "https://liujiayi7.github.io/2022/03/09/MarkText%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E8%AE%B0/",
            "title": "MarkText快捷键速记",
            "date_published": "2022-03-09T11:52:12.000Z",
            "content_html": "<p>一、快捷键使用说明</p>\n<p><img src=\"/.io//C:%5CUsers%5CM%5CAppData%5CRoaming%5Cmarktext%5Cimages%5C1ae43373f261f3d092b0927efe97b521d7237a83.jpg\" alt></p>\n<p>2. 常用操作说明</p>\n<ul>\n<li>\n<p>小表情图标的添加</p>\n<p>在双冒号中间输入内容，系统即会提醒表情</p>\n<p>?</p>\n</li>\n<li>\n<p>斗图表情的天机</p>\n<p><code>使用快捷键 Ctrl++/</code></p>\n</li>\n</ul>\n",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://liujiayi7.github.io/2022/03/07/mybatis/",
            "url": "https://liujiayi7.github.io/2022/03/07/mybatis/",
            "title": "mybatis",
            "date_published": "2022-03-07T11:18:48.000Z",
            "content_html": "<h2 id=\"mybatis简介\"><a class=\"markdownIt-Anchor\" href=\"#mybatis简介\">#</a> MyBatis 简介</h2>\n<h3 id=\"环境说明\"><a class=\"markdownIt-Anchor\" href=\"#环境说明\">#</a> 环境说明：</h3>\n<ul>\n<li>jdk 8 +</li>\n<li>MySQL 5.7.19</li>\n<li>maven-3.6.1</li>\n<li>IDEA</li>\n</ul>\n<p>学习前需要掌握：</p>\n<ul>\n<li>JDBC</li>\n<li>MySQL</li>\n<li>Java 基础</li>\n<li>Maven</li>\n<li>Junit</li>\n</ul>\n<h3 id=\"什么是mybatis\"><a class=\"markdownIt-Anchor\" href=\"#什么是mybatis\">#</a> 什么是 MyBatis</h3>\n<ul>\n<li>MyBatis 是一款优秀的<strong>持久层框架</strong></li>\n<li>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集的过程</li>\n<li>MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 实体类 【Plain Old Java Objects, 普通的 Java 对象】映射成数据库中的记录。</li>\n<li>MyBatis 本是 apache 的一个开源项目 ibatis, 2010 年这个项目由 apache 迁移到了 google code，并且改名为 MyBatis 。</li>\n<li>2013 年 11 月迁移到<strong> Github</strong> .</li>\n<li>Mybatis 官方文档 : <a href=\"http://www.mybatis.org/mybatis-3/zh/index.html\">http://www.mybatis.org/mybatis-3/zh/index.html</a></li>\n<li>GitHub : <a href=\"https://github.com/mybatis/mybatis-3\">https://github.com/mybatis/mybatis-3</a></li>\n</ul>\n<h3 id=\"持久化\"><a class=\"markdownIt-Anchor\" href=\"#持久化\">#</a> 持久化</h3>\n<p><strong>持久化是将程序数据在持久状态和瞬时状态间转换的机制。</strong></p>\n<ul>\n<li>即把数据（如内存中的对象）保存到可永久保存的存储设备中（如磁盘）。持久化的主要应用是将内存中的对象存储在数据库中，或者存储在磁盘文件中、XML 数据文件中等等。</li>\n<li>JDBC 就是一种持久化机制。文件 IO 也是一种持久化机制。</li>\n<li>在生活中：将鲜肉冷藏，吃的时候再解冻的方法也是。将水果做成罐头的方法也是。</li>\n</ul>\n<p><strong>为什么需要持久化服务呢？那是由于内存本身的缺陷引起的</strong></p>\n<ul>\n<li>内存断电后数据会丢失，但有一些对象是无论如何都不能丢失的，比如银行账号等，遗憾的是，人们还无法保证内存永不掉电。</li>\n<li>内存过于昂贵，与硬盘、光盘等外存相比，内存的价格要高 2~3 个数量级，而且维持成本也高，至少需要一直供电吧。所以即使对象不需要永久保存，也会因为内存的容量限制不能一直呆在内存中，需要持久化来缓存到外存。</li>\n</ul>\n<h3 id=\"持久层\"><a class=\"markdownIt-Anchor\" href=\"#持久层\">#</a> 持久层</h3>\n<p><strong>什么是持久层？</strong></p>\n<ul>\n<li>完成持久化工作的代码块 . ——&gt; dao 层 【DAO (Data Access Object) 数据访问对象】</li>\n<li>大多数情况下特别是企业级应用，数据持久化往往也就意味着将内存中的数据保存到磁盘上加以固化，而持久化的实现过程则大多通过各种<strong>关系数据库</strong>来完成。</li>\n<li>不过这里有一个字需要特别强调，也就是所谓的 “层”。对于应用系统而言，数据持久功能大多是必不可少的组成部分。也就是说，我们的系统中，已经天然的具备了 “持久层” 概念？也许是，但也许实际情况并非如此。之所以要独立出一个 “持久层” 的概念，而不是 “持久模块”，“持久单元”，也就意味着，我们的系统架构中，应该有一个相对独立的逻辑层面，专注于数据持久化逻辑的实现.</li>\n<li>与系统其他部分相对而言，这个层面应该具有一个较为清晰和严格的逻辑边界。【说白了就是用来操作数据库存在的！】</li>\n</ul>\n<h3 id=\"为什么需要mybatis\"><a class=\"markdownIt-Anchor\" href=\"#为什么需要mybatis\">#</a> 为什么需要 Mybatis</h3>\n<ul>\n<li>Mybatis 就是帮助程序猿将数据存入数据库中，和从数据库中取数据 .</li>\n<li>传统的 jdbc 操作，有很多重复代码块。比如：数据取出时的封装，数据库的建立连接等等… , 通过框架可以减少重复代码，提高开发效率 .</li>\n<li>MyBatis 是一个半自动化的<strong> ORM 框架 (Object Relationship Mapping) —&gt; 对象关系映射</strong></li>\n<li>所有的事情，不用 Mybatis 依旧可以做到，只是用了它，所有实现会更加简单！<strong>技术没有高低之分，只有使用这个技术的人有高低之别</strong></li>\n<li>MyBatis 的优点</li>\n<li>\n<ul>\n<li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个 jar 文件 + 配置几个 sql 映射文件就可以了，易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li>\n<li>灵活：mybatis 不会对应用程序或者数据库的现有设计强加任何影响。sql 写在 xml 里，便于统一管理和优化。通过 sql 语句可以满足操作数据库的所有需求。</li>\n<li>解除 sql 与程序代码的耦合：通过提供 DAO 层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql 和代码的分离，提高了可维护性。</li>\n<li>提供 xml 标签，支持编写动态 sql。</li>\n<li>…….</li>\n</ul>\n</li>\n<li>最重要的一点，使用的人多！公司需要！</li>\n</ul>\n<p>MyBatis 第一个程序</p>\n<p><strong>思路流程：搭建环境 —&gt; 导入 Mybatis—-&gt; 编写代码 —-&gt; 测试</strong></p>\n<h3 id=\"代码演示\"><a class=\"markdownIt-Anchor\" href=\"#代码演示\">#</a> 代码演示</h3>\n<p>1、搭建实验数据库（右键刷新即可看到新建的数据库，数据表等）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE `mybatis`;</span><br><span class=\"line\">USE `mybatis`;</span><br><span class=\"line\">DROP TABLE IF EXISTS `user`;</span><br><span class=\"line\">CREATE TABLE `user` (</span><br><span class=\"line\">    `id` int(20) NOT NULL PRIMARY KEY,</span><br><span class=\"line\">    `name` varchar(30) DEFAULT NULL,</span><br><span class=\"line\">    `pwd` varchar(30) DEFAULT NULL</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class=\"line\">insert  into `user`(`id`,`name`,`pwd`) values </span><br><span class=\"line\">(1,&#x27;狂神&#x27;,&#x27;123456&#x27;),</span><br><span class=\"line\">(2,&#x27;张三&#x27;,&#x27;abcdef&#x27;),</span><br><span class=\"line\">(3,&#x27;李四&#x27;,&#x27;987654&#x27;);</span><br></pre></td></tr></table></figure>\n<p>2、导入 MyBatis 相关 jar 包</p>\n<ul>\n<li>\n<p>新建 Mybatis-Study 项目，删除目录下的 src 文件夹，新建 mybatis01 项目，在 main/java 文件夹下创建路径为 com/study/ 的包</p>\n</li>\n<li>\n<p>GitHub 上找，在 pom.xml 全局配置文件内编辑</p>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--导入依赖--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--mybatis--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--mysql--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--junit--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、编写 MyBatis 核心配置文件</p>\n<ul>\n<li>查看帮助文档，在 resource 文件夹下新建命名为 mybatis-config.xml 的文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--核心配置文件--&gt;</span><br><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">    &lt;!-- 环境配置--&gt;</span><br><span class=\"line\">    &lt;!--加载类路径下的属性文件--&gt;</span><br><span class=\"line\">    &lt;environments <span class=\"keyword\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span><br><span class=\"line\">        &lt;environment id=<span class=\"string\">&quot;development&quot;</span>&gt;</span><br><span class=\"line\">            &lt;transactionManager type=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span><br><span class=\"line\">            &lt;!--数据库连接相关配置,db.properties文件中的内容--&gt;</span><br><span class=\"line\">            &lt;dataSource type=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span><br><span class=\"line\">                &lt;property</span><br><span class=\"line\">                        name=<span class=\"string\">&quot;driver&quot;</span></span><br><span class=\"line\">                        value=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span><br><span class=\"line\">                &lt;property</span><br><span class=\"line\">                        name=<span class=\"string\">&quot;url&quot;</span></span><br><span class=\"line\">                        value=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;</span></span><br><span class=\"line\"><span class=\"string\">characterEncoding=utf8&amp;useUnicode=true&amp;useSSL=false&quot;</span>/&gt;</span><br><span class=\"line\">                &lt;property</span><br><span class=\"line\">                        name=<span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\">                        value=<span class=\"string\">&quot;root&quot;</span>/&gt;</span><br><span class=\"line\">                &lt;property</span><br><span class=\"line\">                        name=<span class=\"string\">&quot;password&quot;</span></span><br><span class=\"line\">                        value=<span class=\"string\">&quot;mysql.password&quot;</span>/&gt;</span><br><span class=\"line\">            &lt;/dataSource&gt;</span><br><span class=\"line\">        &lt;/environment&gt;</span><br><span class=\"line\">    &lt;/environments&gt;</span><br><span class=\"line\">    &lt;!--mapping文件路径配置--&gt;</span><br><span class=\"line\">    &lt;mappers&gt;</span><br><span class=\"line\">    &lt;!--resource的地址一定是你自己设置的mapper的地址--&gt;</span><br><span class=\"line\">        &lt;mapper resource=<span class=\"string\">&quot;com/study/dao/UserMapper.xml&quot;</span>/&gt;  </span><br><span class=\"line\">    &lt;/mappers&gt;</span><br></pre></td></tr></table></figure>\n<p>4、编写 MyBatis 工具类</p>\n<ul>\n<li>查看帮助文档（com/study/utils/MybatisUtils.java）</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.study.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.io.Resources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//工具类sqlSessionFactory--&gt;sqlSession</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisUtils</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取sqlSessionFactory对象</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">            sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        <span class=\"comment\">//获取SqlSession连接</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlSession <span class=\"title function_\">getSqlSession</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、创建实体类 (com/study/pojo/User.java)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.study.pojo;</span><br><span class=\"line\"><span class=\"comment\">//实体类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String pwd;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">User</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"title function_\">User</span> <span class=\"params\">(<span class=\"type\">int</span> id,String name,String pwd)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id=id;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name=name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.pwd=pwd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id=id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  String <span class=\"title function_\">getName</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name=name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPwd</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  pwd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPwd</span><span class=\"params\">(String pwd)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.pwd=pwd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span>+</span><br><span class=\"line\">                <span class=\"string\">&quot;id=&quot;</span>+id+</span><br><span class=\"line\">                <span class=\"string\">&quot;,name=&#x27;&quot;</span>+name+<span class=\"string\">&#x27;\\&#x27;&#x27;</span>+</span><br><span class=\"line\">                <span class=\"string\">&quot;,pwd=&#x27;&quot;</span>+pwd+<span class=\"string\">&#x27;\\&#x27;&#x27;</span>+<span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6、编写 Mapper 接口类（com/study/dao/UserDao.class）</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.study.dao;</span><br><span class=\"line\">import com.study.pojo.User;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public interface UserDao &#123;</span><br><span class=\"line\">     List<span class=\"tag\">&lt;<span class=\"name\">User</span>&gt;</span> getUserList();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、编写 Mapper.xml 配置文件 (com/study/Dao/UserMapper.xml)</p>\n<ul>\n<li>namespace 十分重要，不能写错！</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--namespace=绑定一个对应的Dao/mapper接口--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.study.dao.UserDao&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.study.pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">        select * from mybatis.user</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>8、编写测试类</p>\n<ul>\n<li>Junit 包测试 (test/java/com/study/Dao/UserDaoTest.java     注意：这里的测试文件的位置一定要与上面 main 文件夹下的包路径一致)</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.study.dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.study.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.study.utils.MybatisUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDaoTest</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//获得SqlSession对象</span></span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlsession</span> <span class=\"operator\">=</span> MybatisUtils.getSqlSession();</span><br><span class=\"line\">        <span class=\"comment\">//执行sql</span></span><br><span class=\"line\">        <span class=\"comment\">//法一</span></span><br><span class=\"line\">        <span class=\"comment\">//sqlsession.getMapper(UserDao.class);</span></span><br><span class=\"line\">        <span class=\"comment\">//法二</span></span><br><span class=\"line\">        UserDao userDao=sqlsession.getMapper(UserDao.class);</span><br><span class=\"line\">        <span class=\"comment\">//userDao.getUserList();</span></span><br><span class=\"line\">        List&lt;User&gt; userList= userDao.getUserList();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//assert userList != null;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user: userList)&#123;</span><br><span class=\"line\">            System.out.println(user);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//关闭SqlSession</span></span><br><span class=\"line\">        sqlsession.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>9、运行测试，成功的查询出来的我们的数据，ok！</p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-43-55-%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png\" alt></p>\n<h3 id=\"问题说明\"><a class=\"markdownIt-Anchor\" href=\"#问题说明\">#</a> 问题说明</h3>\n<p><strong>可能出现问题说明：</strong></p>\n<p><strong>1、Maven 静态资源过滤问题</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--在pom.xml配置文件中添加--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>有了 MyBatis 以后再也不用写原生的 JDBC 代码了，舒服！</p>\n<h5 id=\"2-java错误不支持发行版本-5\"><a class=\"markdownIt-Anchor\" href=\"#2-java错误不支持发行版本-5\">#</a> 2、java：错误：不支持发行版本 5</h5>\n<p>原因： 是因为 ideal 中默认配置中<strong>有几个地方</strong>的 jdk 版本与实际<strong>不一致</strong></p>\n<p><strong>2. 解决方案</strong></p>\n<p>直接 Ctrl+shit+alt+s 出现以下面版</p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-43-11-sdk%E7%89%88%E6%9C%AC.png\" alt></p>\n<p>可以看到自己的 jdk 版本为 17， 然后向下找 module 模块，然后发现这里的 langeage level 居然是 5.</p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-43-20-modules%E9%85%8D%E7%BD%AE.png\" alt></p>\n<p>修改为相匹配的版本即可，正如上图我的 17 版本</p>\n<p>接下来点击左上角 file/setting/build…/compiler/java compiler，把相应的版本都改为相匹配的即可</p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-43-29-compiler%E8%AE%BE%E7%BD%AE.png\" alt></p>\n<p>项目目录如下图所示：</p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-43-40-%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.png\" alt></p>\n<h2 id=\"crud操作\"><a class=\"markdownIt-Anchor\" href=\"#crud操作\">#</a> CRUD 操作</h2>\n<h3 id=\"namespace\"><a class=\"markdownIt-Anchor\" href=\"#namespace\">#</a> namespace</h3>\n<ol>\n<li>将上面案例中的 UserMapper 接口改名为 UserDao；</li>\n<li>将 UserMapper.xml 中的 namespace 改为为 UserDao 的路径 .</li>\n<li>再次测试</li>\n</ol>\n<p><strong>结论：</strong></p>\n<p>配置文件中 namespace 中的名称为对应 Mapper 接口或者 Dao 接口的完整包名，必须一致！</p>\n<h3 id=\"select\"><a class=\"markdownIt-Anchor\" href=\"#select\">#</a> select</h3>\n<ul>\n<li>select 标签是 mybatis 中最常用的标签之一</li>\n<li>select 语句有很多属性可以详细配置每一条 SQL 语句</li>\n<li>\n<ul>\n<li>SQL 语句返回值类型。【完整的类名或者别名】</li>\n<li>传入 SQL 语句的参数类型 。【万能的 Map，可以多尝试使用】</li>\n<li>命名空间中唯一的标识符</li>\n<li>接口中的方法名与映射文件中的 SQL 语句 ID 一一对应</li>\n<li>id</li>\n<li>parameterType</li>\n<li>resultType</li>\n</ul>\n</li>\n</ul>\n<p><strong>需求：根据 id 查询用户</strong></p>\n<p>1、在 UserMapper 中添加对应方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> &#123;   </span><br><span class=\"line\">    <span class=\"comment\">//查询全部用户   </span></span><br><span class=\"line\">    List&lt;User&gt; <span class=\"title function_\">selectUser</span><span class=\"params\">()</span>;   </span><br><span class=\"line\">    <span class=\"comment\">//根据id查询用户   </span></span><br><span class=\"line\">    User <span class=\"title function_\">selectUserById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>2、在 UserMapper.xml 中添加 Select 语句</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectUserById&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.kuang.pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">    select * from user where id = #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、测试类中测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">tsetSelectUserById</span><span class=\"params\">()</span> &#123;   </span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> MybatisUtils.getSession();  <span class=\"comment\">//获取SqlSession连接           UserMapper mapper = session.getMapper(UserMapper.class);   </span></span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> mapper.selectUserById(<span class=\"number\">1</span>);   </span><br><span class=\"line\">    System.out.println(user);             </span><br><span class=\"line\">    session.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://liujiayi7.github.io/2021/11/16/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/",
            "url": "https://liujiayi7.github.io/2021/11/16/zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/",
            "title": "zookeeper分布式部署",
            "date_published": "2021-11-16T12:50:00.000Z",
            "content_html": "<h1 id=\"zookeeper分布式部署\"><a class=\"markdownIt-Anchor\" href=\"#zookeeper分布式部署\">#</a> zookeeper 分布式部署</h1>\n<p>环境：CentOS7 系统、jdk1.8.0-281、hadoop-3.2.2</p>\n<p>zookeeper 版本：3.6.3</p>\n<p>虚拟机台数：3 台</p>\n<p>主机名为：master、slave1、slave2</p>\n<h2 id=\"1准备工作\"><a class=\"markdownIt-Anchor\" href=\"#1准备工作\">#</a> 1・准备工作</h2>\n<h3 id=\"1-1添加映射测试三台虚拟机是否可以ping通\"><a class=\"markdownIt-Anchor\" href=\"#1-1添加映射测试三台虚拟机是否可以ping通\">#</a> 1-1・添加映射，测试三台虚拟机是否可以 ping 通</h3>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.查看三台虚拟机本机的ip地址(注意是在root用户下)</span></span><br><span class=\"line\"><span class=\"attribute\">ifconfig</span></span><br><span class=\"line\"><span class=\"comment\"># 2.修改hosts文件</span></span><br><span class=\"line\"><span class=\"attribute\">vim</span> /etc/hosts</span><br><span class=\"line\"><span class=\"comment\"># 3.添加映射</span></span><br><span class=\"line\"><span class=\"attribute\">192</span>.<span class=\"number\">168</span>.xx.xx master</span><br><span class=\"line\"><span class=\"attribute\">192</span>.<span class=\"number\">168</span>.xx.xx slave1</span><br><span class=\"line\"><span class=\"attribute\">192</span>.<span class=\"number\">168</span>.xx.xx slave2</span><br><span class=\"line\"><span class=\"comment\"># 4.测试是否可以ping通</span></span><br><span class=\"line\"><span class=\"attribute\">ping</span> <span class=\"number\">192</span>.<span class=\"number\">168</span>.xx.xx</span><br><span class=\"line\"><span class=\"comment\"># 出现查询到的ip相关信息证明可以ping通</span></span><br><span class=\"line\"><span class=\"attribute\">ctrl</span>+c结束进程并退出</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@slave1 ljy]#<span class=\"built_in\"> ping </span>master<span class=\"built_in\"></span></span><br><span class=\"line\"><span class=\"built_in\">PING </span>localhost (127.0.0.1) 56(84) bytes of data.</span><br><span class=\"line\">64 bytes <span class=\"keyword\">from</span> localhost (127.0.0.1): <span class=\"attribute\">icmp_seq</span>=1 <span class=\"attribute\">ttl</span>=64 <span class=\"attribute\">time</span>=0.025 ms</span><br><span class=\"line\">64 bytes <span class=\"keyword\">from</span> localhost (127.0.0.1): <span class=\"attribute\">icmp_seq</span>=2 <span class=\"attribute\">ttl</span>=64 <span class=\"attribute\">time</span>=0.039 ms</span><br><span class=\"line\">64 bytes <span class=\"keyword\">from</span> localhost (127.0.0.1): <span class=\"attribute\">icmp_seq</span>=3 <span class=\"attribute\">ttl</span>=64 <span class=\"attribute\">time</span>=0.072 ms</span><br><span class=\"line\">64 bytes <span class=\"keyword\">from</span> localhost (127.0.0.1): <span class=\"attribute\">icmp_seq</span>=4 <span class=\"attribute\">ttl</span>=64 <span class=\"attribute\">time</span>=0.027 ms</span><br><span class=\"line\">64 bytes <span class=\"keyword\">from</span> localhost (127.0.0.1): <span class=\"attribute\">icmp_seq</span>=5 <span class=\"attribute\">ttl</span>=64 <span class=\"attribute\">time</span>=0.060 ms</span><br><span class=\"line\">64 bytes <span class=\"keyword\">from</span> localhost (127.0.0.1): <span class=\"attribute\">icmp_seq</span>=6 <span class=\"attribute\">ttl</span>=64 <span class=\"attribute\">time</span>=0.059 ms</span><br><span class=\"line\">^C</span><br><span class=\"line\">--- localhost<span class=\"built_in\"> ping </span>statistics ---</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-解压apache-zookeeper-363-bintargz\"><a class=\"markdownIt-Anchor\" href=\"#1-2-解压apache-zookeeper-363-bintargz\">#</a> 1-2・解压 apache-zookeeper-3.6.3-bin.tar.gz</h3>\n<p><mark>注意</mark>：一定要先找好被解压文件的位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf /home/xxx/xxx/xxx/apache-zookeeper-3.6.3-bin.tar.gz -C /usr/local</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">进入/usr/local，改一下文件夹名字，方便后续操作</span></span><br><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">mv apache-zookeeper-3.6.3-bin/ zookeeper</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">创建用来存放数据的文件夹</span></span><br><span class=\"line\">mkdir -p /usr/local/zookeeper/data</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">创建用来存放日志的文件夹</span></span><br><span class=\"line\">mkdir -p /usr/local/zookeeper/logs</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">zookeeper默认启动配置文件名字为zoo.cfg，所以将样例配置文件复制一下，原文件做备份</span></span><br><span class=\"line\">cp /usr/local/zookeeper/conf/zoo_sample.cfg /usr/local/zookeeper/conf/zoo.cfg</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3配置环境变量\"><a class=\"markdownIt-Anchor\" href=\"#1-3配置环境变量\">#</a> 1-3・配置环境变量：</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>在文件最下端写入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export ZOOKEEPER_HOME=/home/program/zookeeper</span><br><span class=\"line\">PATH=$PATH:$ZOOKEEPER_HOME/bin</span><br></pre></td></tr></table></figure>\n<p>接下来刷新环境变量：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4配置ssh实现免密登录三台机器分别执行\"><a class=\"markdownIt-Anchor\" href=\"#1-4配置ssh实现免密登录三台机器分别执行\">#</a> 1-4・配置 ssh 实现免密登录（三台机器分别执行）</h3>\n<p>因为我们要搭建的是集群，各个节点都要能够实现相互 ping 通，实现相互通讯，因而有了第一步的准备工作。又因为在运行时，各个主机相互通讯，执行操作都需要输入密码来完成，很麻烦，ssh 连接刚好可以解决我们这个麻烦。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/zookeeper/.ssh   # cd /root/.ssh  同理</span><br><span class=\"line\">ls   # 查看目录下的相关配置文件</span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\"> 执行删除操作</span></span><br><span class=\"line\">rm -rf id_rsa</span><br><span class=\"line\">rm -rf authorized_keys</span><br><span class=\"line\">rm -rf id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>搭建 ssh 连接</p>\n<p>在三台机器中都生成密钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa   # 一路回车即可</span><br></pre></td></tr></table></figure>\n<p>执行完之后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span>   <span class=\"comment\"># 可以看到之前删掉的几个文件又重新生成 其中 id_rsa是私钥 id_rsa.pub是公钥，登陆时一般使用公钥</span></span><br></pre></td></tr></table></figure>\n<p>使用前，我们要先将公钥存在文件里然后将文件发送到每一台机器上</p>\n<p>法一： 在 master 中的 /root/.ssh 下把 id_rsa.pub、id_rsa.pub.slave1、id_rsa.pub.slave2 追加到 authorized_keys 中。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat id_rsa.pub &gt;&gt; authorized_keys </span><br><span class=\"line\">cat id_rsa.pub.slave1 &gt;&gt; authorized_keys </span><br><span class=\"line\">cat id_rsa.pub.slave2 &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure>\n<p>然后把 authorized_keys 传回到 slave1 和 slave2 中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp authorized_keys root@slave1:~/.ssh </span><br><span class=\"line\">scp authorized_keys root@slave2:~/.ssh</span><br></pre></td></tr></table></figure>\n<p>法二：</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在两台备用机下分别把id_rsa.pub发送到主机上的相同文件下</span></span><br><span class=\"line\">scp id_rsa.pub root<span class=\"variable\">@master</span><span class=\"symbol\">:~/</span>.ssh/id_rsa.pub.slave1</span><br><span class=\"line\">scp id_rsa.pub root<span class=\"variable\">@master</span><span class=\"symbol\">:~/</span>.ssh/id_rsa.pub.slave2</span><br></pre></td></tr></table></figure>\n<p>如果报错，可能是因为之前配置 ssh 时文件没有删除干净，在相关目录下查看文件，执行删除操作即可。</p>\n<h2 id=\"2多节点zookeeper配置\"><a class=\"markdownIt-Anchor\" href=\"#2多节点zookeeper配置\">#</a> 2・多节点 zookeeper 配置</h2>\n<p>在 /usr/local/zookeeper/conf/ 目录下的 zoo.cfg 文件中找到以下内容（三台虚拟机步骤相同）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/zookeeper/conf/</span><br><span class=\"line\">vim zoo.cfg</span><br><span class=\"line\">dataDir=/tmp/zookeeper</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataDir=/usr/local/zookeeper/data</span><br><span class=\"line\">dataLogDir=/usr/local/zookeeper/logs</span><br><span class=\"line\">server.1=master:2890:3890</span><br><span class=\"line\">server.2=slave1:2890:3890</span><br><span class=\"line\">server.3=slave2:2890:3890</span><br></pre></td></tr></table></figure>\n<p>注意：这里的 b 也就是 ip 地址是动态的，可能重启以下 ip 地址就会发生变化，因此，为了防止出现错误，最好把 ip 地址写成自己的主机名！！！</p>\n<p>其中，最常用的配置有以下几个：</p>\n<ul>\n<li>tickTime：这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。</li>\n<li>dataDir：顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 的日志文件是在 bin 目录下，有一个 zookeeper.out 文件。</li>\n<li>clientPort：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。伪集群模式下，这个端口需要配置成不同的。如果是多台虚拟机或者服务器下，则无需更改。</li>\n</ul>\n<p>这里设置的是三台虚拟机，设置的第一台为主机 (master)，而另外两台为备用机 (follower)，在 ==/usr/local/zookeeper/data/== 下，建立一个 myid 文件来区分主机和备用机：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/zookeeper/data/myid</span><br></pre></td></tr></table></figure>\n<p>三台虚拟机中的步骤相同：</p>\n<p>在主机 master 中写入 1，备用机 slave1、2 中分别写入 2、3</p>\n<p>注意：在 ==/usr/local/zookeeper/logs/<mark> 下（日志文件夹）也可以找到以</mark>.pid== 结尾的文件，最好把里面的内容也分别修改为 1、2、3 来作为区分！！！（否则可能会报错）</p>\n<p>*【server】的配置含义说明：</p>\n<p>server.A=B:C:D</p>\n<p>其中 A 是一个数字，表示这个是第几号服务器；</p>\n<p>B 是这个服务器的 ip 地址；</p>\n<p>C 表示的是这个服务器与集群中的 Leader 服务器交换信息的端口；</p>\n<p>D 表示的是万一集群中的 Leader 服务器挂了，需要一个端口来重新进行选举，选出一个新的 Leader，而这个端口就是用来执行选举时服务器相互通信的端口。</p>\n<p>如果是伪集群的配置方式（也就是在一台服务器上搭建多个 ZK 服务节点），由于 一台服务器下的 IP 地址肯定一样，所以不同的 Zookeeper 实例通信端口号不能一样，故需要给它们分配不同的端口号。</p>\n<p>相反，如果是在不同的服务器下（不同的虚拟机，IP 地址不同）搭建 ZK 的话，由于 IP 地址不同，则 C 与 D 对应的通信端口可以保持一致。当然也可以配置成其他的端口。*</p>\n<p>至此，我们的三个 zookeeper 节点的配置已经完成了，下面我们就启动 zookeeper 服务，验证集群是否搭建成功。</p>\n<h2 id=\"3验证不同虚拟机下的zookeeper服务\"><a class=\"markdownIt-Anchor\" href=\"#3验证不同虚拟机下的zookeeper服务\">#</a> 3・验证不同虚拟机下的 zookeeper 服务</h2>\n<p>分别进入每个虚拟机的 /usr/local/zookeeper/bin/ 目录下，执行以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">启动zookeeper服务</span></span><br><span class=\"line\">./zkServer.sh start</span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">查看进程</span></span><br><span class=\"line\">jps</span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">查看启动状态（没有错误的话，因该是出现一个leader和两个follower）</span></span><br><span class=\"line\">./zkServer.sh status</span><br><span class=\"line\"><span class=\"meta\"># </span><span class=\"language-bash\">停止服务</span></span><br><span class=\"line\">./zkServer.sh stop</span><br></pre></td></tr></table></figure>\n<h2 id=\"4配置过程中遇到的问题\"><a class=\"markdownIt-Anchor\" href=\"#4配置过程中遇到的问题\">#</a> 4・配置过程中遇到的问题</h2>\n<h3 id=\"4-1在zookeeper启动状态下使用zkserversh-status-查看启动状态会一直报一个错误\"><a class=\"markdownIt-Anchor\" href=\"#4-1在zookeeper启动状态下使用zkserversh-status-查看启动状态会一直报一个错误\">#</a> 4-1. 在 zookeeper 启动状态下，使用./zkServer.sh status 查看启动状态，会一直报一个错误：</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error contactin service.It is probably not running.</span><br></pre></td></tr></table></figure>\n<p>为什么会出现这种错误？</p>\n<p><mark>1. 检查一下另外两台机器是否也启动了服务</mark></p>\n<p>如果没有，那就是问题所在，我们不部署的是一个集群，那必然是有一个 leader 和两个 follower，那就是说另外两台机器也必须是正常启动的</p>\n<p><mark>2. 检查是否关闭防火墙</mark></p>\n<p>没有关闭防火墙也会出现相关问题</p>\n<figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"params\">system</span>ctl status firewalld <span class=\"comment\"># 检查防火墙状态</span></span><br><span class=\"line\"><span class=\"params\">system</span>ctl stop firewalled <span class=\"comment\"># 关闭防火墙</span></span><br><span class=\"line\"><span class=\"params\">system</span>ctl disable firewalld <span class=\"comment\"># 禁止启用防火墙</span></span><br></pre></td></tr></table></figure>\n<p><mark>3. 不是以上两种情况的话，查看日志文件来找出错误并检查</mark></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/zookeeper/</span>data</span><br><span class=\"line\">ls</span><br><span class=\"line\"><span class=\"comment\"># 找到以.out结尾的文件查看日志</span></span><br></pre></td></tr></table></figure>\n<p>注意事项：日志中报错信息为拒绝连接，在 zoo.cfg 文件中，master、slave1、slave2 不可以使用 localhost 或者 127.0.0.1，同时在 /etc/hosts 中，不可以使用 127.0.0.1 来映射 master 等。</p>\n",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://liujiayi7.github.io/2021/11/13/shell%E8%84%9A%E6%9C%AC/",
            "url": "https://liujiayi7.github.io/2021/11/13/shell%E8%84%9A%E6%9C%AC/",
            "title": "shell脚本",
            "date_published": "2021-11-13T09:37:14.000Z",
            "content_html": "<h1 id=\"shell脚本\"><a class=\"markdownIt-Anchor\" href=\"#shell脚本\">#</a> shell 脚本</h1>\n<h3 id=\"1-shell介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-shell介绍\">#</a> 1、shell 介绍</h3>\n<p>shell 就是我们找来的翻译</p>\n<p>shell 是一个程序，采用 C 语言编写，是用户和 linux 内核沟通的桥梁。它既是一种命令语言，又是一种解释性的编程语言。通过一个图表来查看一下 shell 的作用。</p>\n<p><mark>shell 介于内核和用户之间，负责命令的解释</mark></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/LiuJiaYi7/LiuJiaYi7.github.io@master/img/image-20211114143851123.3315uffkxue0.png\" alt=\"image-20211114143851123\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/LiuJiaYi7/JiaYiJiaYi@master/img/1600050927043.r1fiwyp1528.png\" alt=\"1600050927043\"></p>\n<h3 id=\"2-bash-shell基本特性\"><a class=\"markdownIt-Anchor\" href=\"#2-bash-shell基本特性\">#</a> 2、bash shell 基本特性</h3>\n<p>2.1、 命令和文件自动补全</p>\n<p>Tab 只能补全命令和文件 （RHEL6/Centos6）</p>\n<p>2.2、 常见的快捷键 — 提升操作熟练度</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^c    终止前台运行的程序</span><br><span class=\"line\">^z    将前台运行的程序挂起到后台</span><br><span class=\"line\">^d    退出 等价<span class=\"keyword\">exit</span></span><br><span class=\"line\">^l    清屏 </span><br><span class=\"line\">^a |home   光标移到命令行的最前端</span><br><span class=\"line\">^e |end   光标移到命令行的后端</span><br><span class=\"line\">^u    删除光标前所有字符</span><br><span class=\"line\">^k    删除光标后所有字符</span><br><span class=\"line\">^r   搜索历史命令</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-shell脚本介绍\"><a class=\"markdownIt-Anchor\" href=\"#3-shell脚本介绍\">#</a> 3、shell 脚本介绍</h3>\n<p>shell 脚本是什么</p>\n<p>简单来说就是将需要完成某个任务所执行的命令按照执行顺序保存到文本中，并给予执行权限。以下载安装 nginx 为例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install wget gcc pcre-devel zlob_devel</span><br><span class=\"line\">wget http://nginx.org/download.nginx-1.16.0.tar.gz</span><br><span class=\"line\">tar xf nginx-1.16.0.tar.gz</span><br><span class=\"line\">cd nginx-1.16.0</span><br><span class=\"line\">./connfigure --prefix-=/usrl/local/nginx</span><br><span class=\"line\">make -j 4</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>从下载安装包解压缩到解析文件到安装这一系列步骤</p>\n<p><mark>注意</mark>：按照顺序执行</p>\n<p>解释型脚本，不需要编译</p>\n<h3 id=\"4shell脚本语法\"><a class=\"markdownIt-Anchor\" href=\"#4shell脚本语法\">#</a> 4.shell 脚本语法</h3>\n<ol>\n<li>\n<p>定义脚本的执行环境      #！/bin/bash/</p>\n</li>\n<li>\n<p>注明脚本信息  Author/time/release/description 等</p>\n</li>\n<li>\n<p>执行代码</p>\n</li>\n<li>\n<p>脚本组成：解释环境 + 注释说明 + 执行代码</p>\n</li>\n<li>\n<p>脚本命名   以.sh 结尾     虽然 Linux 中没有要求给规范文件格式，但最好规范一点   即：<a href=\"http://xn--+-i68a87w61g8xf6m9b.sh\">脚本拓展名 +.sh</a>   名字不要太长</p>\n</li>\n<li>\n<p>代码规范</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、<span class=\"comment\">#!/bin/bash  定义脚本的执行环境</span></span><br><span class=\"line\"><span class=\"regexp\">//</span>脚本第一行， <span class=\"comment\">#！魔法字符，指定脚本代码执行的程序。即它告诉系统这个脚本需要什么解释器来执行，也就是使用</span></span><br><span class=\"line\">哪一种Shell</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>、<span class=\"comment\">#代表注释，#！特例 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span>、<span class=\"regexp\">//</span>以下内容是对脚本的基本信息的描述,大家可以根据实际情况尽可能的写详细一些，方便后续使用者</span><br><span class=\"line\"><span class=\"comment\"># Name: 脚本名字</span></span><br><span class=\"line\"><span class=\"comment\"># Desc:描述</span></span><br><span class=\"line\"><span class=\"comment\"># Path:存放路径</span></span><br><span class=\"line\"><span class=\"comment\"># Usage:用法</span></span><br><span class=\"line\"><span class=\"comment\"># Update:更新时间</span></span><br><span class=\"line\"><span class=\"comment\"># Author:作者</span></span><br><span class=\"line\"><span class=\"comment\"># Release: 分发版本</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">//</span>下面就是脚本的具体内容</span><br><span class=\"line\">commands</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>7. 执行代码方法：</p>\n<p>两种：</p>\n<p>（1）解释器执行（非标准脚本执行方式）(命令行下)：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">echo &quot;Hello World&quot;</span><br></pre></td></tr></table></figure>\n<p>示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;hostname&quot;&gt;&gt;1.sh</span><br><span class=\"line\">sh/bash 1.sh</span><br></pre></td></tr></table></figure>\n<p>Linux 系统下有许多 shell 脚本的解释器，最常用的就是 bash 和 sh，两种都可以</p>\n<p>（2）二进制文件形式（标准脚本执行方式）（必须给执行权限，否则用不了）（在 root 用户下）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x text.sh</span><br></pre></td></tr></table></figure>\n<p>示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;hostname&quot;&gt;&gt;1.sh</span><br><span class=\"line\">chomd 644 1.sh</span><br><span class=\"line\">./1.sh</span><br></pre></td></tr></table></figure>\n<p>在这两种执行代码方法都可以</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@~]# bash -<span class=\"keyword\">x</span> <span class=\"number\">1</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\">+ <span class=\"built_in\">hostname</span></span><br><span class=\"line\">zutuanxue</span><br><span class=\"line\"></span><br><span class=\"line\">-<span class=\"keyword\">x</span>:一般用于排错，查看脚本的执行过程</span><br><span class=\"line\">-n:用来查看脚本的语法是否有问题</span><br><span class=\"line\"></span><br><span class=\"line\">注意：如果脚本没有加可执行权限，不能使用标准的执行方法执行，bash <span class=\"number\">1</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">其他：</span><br><span class=\"line\"><span class=\"keyword\">source</span> <span class=\"number\">2</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\">server</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">. <span class=\"number\">2</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\">server</span><br><span class=\"line\"><span class=\"keyword\">source</span> 和 . 表示读取文件，执行文件里的命令</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-shell字符\"><a class=\"markdownIt-Anchor\" href=\"#5-shell字符\">#</a> 5、shell 字符</h3>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"attribute\">!</span><span class=\"punctuation\">:</span> <span class=\"string\">               执行历史命令   !! 执行上一条命令</span></span><br><span class=\"line\">    <span class=\"attribute\">$</span><span class=\"punctuation\">:</span> <span class=\"string\">               变量中取内容符</span></span><br><span class=\"line\">    <span class=\"attribute\">+ - * / %</span><span class=\"punctuation\">:</span> <span class=\"string\">       对应数学运算  加 减 乘 除 取余数  </span></span><br><span class=\"line\">    <span class=\"attribute\">&amp;</span><span class=\"punctuation\">:</span> <span class=\"string\">               后台执行</span></span><br><span class=\"line\">    <span class=\"attribute\">;：               分号可以在shell中一行执行多个命令，命令之间用分号分割    </span></span><br><span class=\"line\"><span class=\"attribute\">    \\</span><span class=\"punctuation\">:</span> <span class=\"string\">               转义字符</span></span><br><span class=\"line\">    <span class=\"attribute\">``</span><span class=\"punctuation\">:</span> <span class=\"string\">              反引号 命令中执行命令    echo &quot;today is `date +%F`&quot;</span></span><br><span class=\"line\">    <span class=\"attribute\">&#x27; &#x27;</span><span class=\"punctuation\">:</span> <span class=\"string\">             单引号，脚本中字符串要用单引号引起来，但是不同于双引号的是，单引号不解释变量</span></span><br><span class=\"line\">    <span class=\"attribute\">&quot; &quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">             双引号，脚本中出现的字符串可以用双引号引起来</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">通配符    </span></span><br><span class=\"line\"><span class=\"attribute\">    ~</span><span class=\"punctuation\">:</span> <span class=\"string\">               家目录    # cd ~ 代表进入用户家目录</span></span><br><span class=\"line\">    <span class=\"attribute\">*</span><span class=\"punctuation\">:</span> <span class=\"string\">               星号是shell中的通配符  匹配所有</span></span><br><span class=\"line\">    <span class=\"attribute\">?</span><span class=\"punctuation\">:</span> <span class=\"string\">               问号是shell中的通配符  匹配除回车以外的一个字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">重定向</span><br><span class=\"line\"><span class=\"punctuation\">&gt;</span> <span class=\"string\">     覆盖输入 一次性的输入，再次输入内容会发生变化只显示最后一次输入内容</span></span><br><span class=\"line\">&gt;&gt; 追加输入</span><br><span class=\"line\">&lt; 输出</span><br><span class=\"line\">&lt;&lt; 追加输出</span><br><span class=\"line\"></span><br><span class=\"line\">管道命令</span><br><span class=\"line\">|：               管道符 上一个命令的输出作为下一个命令的输入   cat filename | grep &quot;abc&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://liujiayi7.github.io/2021/11/10/hadoop%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/",
            "url": "https://liujiayi7.github.io/2021/11/10/hadoop%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/",
            "title": "hadoop单机部署",
            "date_published": "2021-11-10T12:55:58.000Z",
            "content_html": "<h1 id=\"一-hadoop单机部署\"><a class=\"markdownIt-Anchor\" href=\"#一-hadoop单机部署\">#</a> 一、Hadoop 单机部署</h1>\n<h2 id=\"1-部署hadoop322\"><a class=\"markdownIt-Anchor\" href=\"#1-部署hadoop322\">#</a> 1、部署 hadoop3.2.2</h2>\n<p>环境：阿里云服务器 Centos7.6，jdk1.8.0_281</p>\n<p>版本：hadoop-3.2.2</p>\n<p>首先：解压缩 hadoop 文件到 /usr/local/        (和之前安装 zookeeper 的方法一样)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解压缩:</span><br><span class=\"line\">tar -zxvf /home/xxx/xxx/xxx/hadoop-3.2.2.tar.gz -C /usr/local</span><br><span class=\"line\">cd /usr/local</span><br><span class=\"line\">ls   查看当前工作目录下的文件</span><br><span class=\"line\">更改文件夹名字：</span><br><span class=\"line\">mv hadoop-3.2.2 hadoop</span><br></pre></td></tr></table></figure>\n<p>接着创建几个目录，如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/local/hadoop/data</span><br><span class=\"line\">mkdir /usr/local/hadoop/hdfs/name</span><br><span class=\"line\">mkdir /usr/local/hadoop/hdfs/data</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-修改配置文件\"><a class=\"markdownIt-Anchor\" href=\"#2-修改配置文件\">#</a> 2、修改配置文件</h2>\n<p>以下文件均在 ==/usr/local/hadoop/etc/hadoop== 下</p>\n<p><mark>core-site.xml</mark><br>\n 添加如下配置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">&lt;!--定义namenode地址 默认9000--&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs://admin:9000&lt;/value&gt;  </span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">    注意：admin设置为自己的主机号，端口号随意设置即可，默认为9000    找不到主机号 命令行输入：ifconfig查看即可</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"> &lt;!--修改用于hadoop存储数据的默认位置--&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/usr/local/hadoop/data&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<p><mark>hdfs-site.xml</mark></p>\n<p>添加如下配置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">    &lt;property&gt;</span><br><span class=\"line\">  &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class=\"line\">  &lt;value&gt;/usr/local/hadoop/hdfs/name&lt;/value&gt;</span><br><span class=\"line\">    &lt;/property&gt;</span><br><span class=\"line\">    &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/usr/local/hadoop/hdfs/data&lt;/value&gt;</span><br><span class=\"line\">    &lt;/property&gt;</span><br><span class=\"line\">    &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;1&lt;/value&gt;</span><br><span class=\"line\">    &lt;/property&gt;</span><br><span class=\"line\">     &lt;property&gt;</span><br><span class=\"line\">        &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class=\"line\">        &lt;value&gt;false&lt;/value&gt;</span><br><span class=\"line\">    &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<p><mark>mapred-site.xml</mark><br>\n 添加配置如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">&lt;property&gt;</span><br><span class=\"line\">       &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class=\"line\">       &lt;value&gt;yarn&lt;/value&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<p><mark>yarn-site.xml</mark><br>\n 添加如下配置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Site specific YARN configuration properties --&gt;</span><br><span class=\"line\">        &lt;property&gt;</span><br><span class=\"line\">                &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class=\"line\">                &lt;value&gt;xxxx&lt;/value&gt;   &lt;!--填写自定义的主机名/ip--&gt;</span><br><span class=\"line\">        &lt;/property&gt;</span><br><span class=\"line\">        &lt;property&gt;</span><br><span class=\"line\">                &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class=\"line\">                &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class=\"line\">        &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<p><mark>yarn-env.sh</mark><br>\n 添加如下配置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/local/java/jdk1.8.0_281</span><br></pre></td></tr></table></figure>\n<p><mark>hadoop-env.sh</mark><br>\n 添加如下配置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JAVA_HOME=/usr/local/java/jdk1.8.0_281</span><br><span class=\"line\">HADOOP_SHELL_EXECNAME=root</span><br></pre></td></tr></table></figure>\n<p><mark>hadoop/bin/hdfs</mark><br>\n 把 HADOOP_SHELL_EXECNAME=&quot;hdfs&quot; 修改为 HADOOP_SHELL_EXECNAME=&quot;root&quot; 即可<br>\n<mark>.sh 文件</mark><br>\n为防止启动失败，<a href=\"http://xn--start-dfs-z89nz78p820h.sh\">需修改 start-dfs.sh</a>、<a href=\"http://start-yarn.sh\">start-yarn.sh</a>、<a href=\"http://stop-dfs.sh\">stop-dfs.sh</a>、<a href=\"http://stop-yarn.sh\">stop-yarn.sh</a>，这四个文件均在 /usr/local/hadoop/sbin/ 中</p>\n<p><a href=\"http://xn--start-dfs-z89nz78p.sh\">修改 start-dfs.sh</a>、<a href=\"http://stop-dfs.sh\">stop-dfs.sh</a>，在文件头添加如下设置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HDFS_DATANODE_USER=root</span><br><span class=\"line\">HDFS_DATANODE_SECURE_USER=hdfs</span><br><span class=\"line\">HDFS_NAMENODE_USER=root</span><br><span class=\"line\">HDFS_SECONDARYNAMENODE_USER=root</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://xn--start-yarn-yu6pe85r.sh\">修改 start-yarn.sh</a>、<a href=\"http://stop-yarn.sh\">stop-yarn.sh</a>，在文件头添加如下设置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YARN_RESOURCEMANAGER_USER=root</span><br><span class=\"line\">HADOOP_SECURE_DN_USER=yarn</span><br><span class=\"line\">YARN_NODEMANAGER_USER=root</span><br></pre></td></tr></table></figure>\n<p><mark>配置 Hadoop 环境变量</mark><br>\n (1) 在～/.bashrc 中追加如下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export HADOOP_HOME=/usr/local/hadoop</span><br><span class=\"line\">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure>\n<p>刷新～/.bashrc：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>(2) 在 /etc/profile/ 中配置 (同样是在文件后追加)</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HADOOP_HOME=/usr/local/hadoop</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$JAVA_HOME</span>/bin:<span class=\"variable\">$HADOOP_HOME</span>/bin:<span class=\"variable\">$HADOOP_HOME</span>/sbin</span><br></pre></td></tr></table></figure>\n<p><mark>important：</mark> 防止发生冲突，只在一个文件中配置即可！！！！</p>\n<h2 id=\"3-格式化namenode并启动hadoop\"><a class=\"markdownIt-Anchor\" href=\"#3-格式化namenode并启动hadoop\">#</a> 3、格式化 namenode，并启动 hadoop：</h2>\n<h3 id=\"1-格式化namenode\"><a class=\"markdownIt-Anchor\" href=\"#1-格式化namenode\">#</a> 1、格式化 namenode</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hdfs namenode -format     //hadoop namenode -format不适用于hadoop3.2.2版本 会报错！！！！</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-启动hdfs和yarn\"><a class=\"markdownIt-Anchor\" href=\"#2-启动hdfs和yarn\">#</a> 2、启动 hdfs 和 yarn</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start-all.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-只启动hdfs\"><a class=\"markdownIt-Anchor\" href=\"#3-只启动hdfs\">#</a> 3、只启动 hdfs</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start-dfs.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-只启动yarn\"><a class=\"markdownIt-Anchor\" href=\"#4-只启动yarn\">#</a> 4、只启动 yarn</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start-yarn.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-关闭hadoop\"><a class=\"markdownIt-Anchor\" href=\"#5-关闭hadoop\">#</a> 5、关闭 hadoop</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stop-all.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-部署过程中出现的错误及解决方法\"><a class=\"markdownIt-Anchor\" href=\"#4-部署过程中出现的错误及解决方法\">#</a> 4、部署过程中出现的错误及解决方法</h2>\n<p>（1）在浏览器上输入 http://localhost:9000/，显示：It looks like you…</p>\n<p>经过思考以及搜索问题原因，发现是单节点的 hadoop 的问题，正确为 http://localhost:8088/cluster</p>\n<p>具体见下面说明：</p>\n<p>管理界面：<a href=\"http://localhost:8088\">http://localhost:8088</a></p>\n<p>NameNode 界面：<a href=\"http://localhost:50070\">http://localhost:50070</a></p>\n<p>HDFS NameNode 界面：<a href=\"http://localhost:8042\">http://localhost:8042</a></p>\n<p>(2) 在虚拟机搭建 Hadoop 并启动时，出现<mark> localhost.localdomain: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password</mark> 问题：</p>\n<p>首先运行</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ssh localhost</span></span><br></pre></td></tr></table></figure>\n<p>正常情况下是免密登录的，如果你还要输入密码的话，那就是你 ssh 没有配置好。这里要说一下的是 ssh7.0 之后就关闭了 dsa 的密码验证方式，如果你的秘钥是通过 dsa 生成的话，需要改用 rsa 来生成秘钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -P &#x27;&#x27; -f ~/.ssh/id_rsa</span><br><span class=\"line\">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n<p>再次运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh localhost</span><br></pre></td></tr></table></figure>\n<p>如果不需要输入密码，说明 ssh 配置好了。接下来运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start-all.sh</span><br></pre></td></tr></table></figure>\n<p>应该就可以了。</p>\n<p>（3）输入 localhost:9000 无法打开服务器：</p>\n<p>原因没有打开防火墙</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status firewalld</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n<p>关闭防火墙：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://liujiayi7.github.io/2021/11/01/VMware%E6%8C%82%E8%BD%BD%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/",
            "url": "https://liujiayi7.github.io/2021/11/01/VMware%E6%8C%82%E8%BD%BD%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/",
            "title": "VMware挂载共享文件夹",
            "date_published": "2021-11-01T08:19:50.000Z",
            "content_html": "<h1 id=\"vmware挂载共享文件夹\"><a class=\"markdownIt-Anchor\" href=\"#vmware挂载共享文件夹\">#</a> VMware 挂载共享文件夹</h1>\n<p>找到想要挂载共享文件夹的虚拟机并点击，编辑虚拟机设置（当然也可以在工具栏中找到虚拟机点击找到设置，打开即可）：</p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-45-14-%E6%8C%82%E8%BD%BD1.jpg\" alt></p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-45-44-%E6%8C%82%E8%BD%BD3.jpg\" alt></p>\n<p><img src=\"https://raw.githubusercontent.com/LiuJiaYi7/LiuJiaYi7.github.io/master/2022/03/09-19-45-29-%E6%8C%82%E8%BD%BD2.jpg\" alt></p>\n<p>按照上面照片上的步骤即可！</p>\n<p>其实这篇博客前几天就要上传的，但是出问题了！！！！是什么问题呢？</p>\n<p><mark>我的图床工具坏了</mark></p>\n<p>就一直上传失败，显示服务端出错：</p>\n<p>![]<img src=\"https://cdn.jsdelivr.net/gh/LiuJiaYi7/LiuJiaYi7.github.io@master/img/20211102212723.png\" alt=\"20211102212723\"></p>\n<p>![]<img src=\"https://cdn.jsdelivr.net/gh/LiuJiaYi7/LiuJiaYi7.github.io@master/img/20211102192901.png\" alt=\"20211102192901\"></p>\n<p>啊大概就是这个样子，第二张照片上问题解决了第一张又不行，所以卸载了 PicGo 四五遍，当然下载的也很慢，改了仓库名，更新了 token，改了照片这个・・・・・・这些都不行，崩溃边缘，问了度娘看了一些方法试过了也都不行！</p>\n<p>然后！</p>\n<p>然后！</p>\n<p>我就发现了一个神器：PicX  功能更强大，更轻便，关键关键是可以更改图片外链的三种形式，更奈斯的是不用下载！</p>\n<p>上面 PicGo 出现的报错问题现在也还没解决，有解决方法的 xd 一定要滴滴我啊！！！！</p>\n",
            "tags": [
                "笔记"
            ]
        }
    ]
}