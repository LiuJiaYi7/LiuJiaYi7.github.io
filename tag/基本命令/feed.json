{
    "version": "https://jsonfeed.org/version/1",
    "title": "LiuJiaYi7's blog • All posts by \"基本命令\" tag",
    "description": "欢迎来到小七的笔记空间，我们在这里一起相互交流学习吧！",
    "home_page_url": "https://LiuJiaYi7.github.io",
    "items": [
        {
            "id": "https://liujiayi7.github.io/2021/05/15/git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/",
            "url": "https://liujiayi7.github.io/2021/05/15/git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/",
            "title": "git基本命令",
            "date_published": "2021-05-15T09:54:45.000Z",
            "content_html": "<p>#一、 Git 常用命令速查</p>\n<p>git branch 查看本地所有分支<br>\n git status 查看当前状态<br>\n git commit 提交<br>\n git branch -a 查看所有的分支<br>\n git branch -r 查看远程所有分支<br>\n git commit -am “init” 提交并且加注释<br>\n git remote add origin <a href=\"mailto:git@192.168.1.119\">git@192.168.1.119</a>:ndshow<br>\ngit push origin master 将文件给推到服务器上<br>\n git remote show origin 显示远程库 origin 里的资源<br>\n git push origin master:develop<br>\ngit push origin master:hb-dev 将本地库与服务器上的库进行关联<br>\n git checkout --track origin/dev 切换到远程 dev 分支<br>\n git branch -D master develop 删除本地库 develop<br>\ngit checkout -b dev 建立一个新的本地分支 dev<br>\ngit merge origin/dev 将分支 dev 与当前分支进行合并<br>\n git checkout dev 切换到本地 dev 分支<br>\n git remote show 查看远程库<br>\n git add .<br>\ngit rm 文件名 (包括路径) 从 git 中删除指定文件<br>\n git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来<br>\n git config --list 看所有用户<br>\n git ls-files 看已经被提交的<br>\n git rm [file name] 删除一个文件<br>\n git commit -a 提交当前 repos 的所有的改变<br>\n git add [file name] 添加一个文件到 git index<br>\ngit commit -v 当你用－v 参数的时候可以看 commit 的差异<br>\n git commit -m “This is the message describing the commit” 添加 commit 信息<br>\n git commit -a -a 是代表 add，把所有的 change 加到 git index 里然后再 commit<br>\ngit commit -a -v 一般提交命令<br>\n git log 看你 commit 的日志<br>\n git diff 查看尚未暂存的更新<br>\n git rm a.a 移除文件 (从暂存区和工作区中删除)<br>\n git rm --cached a.a 移除文件 (只从暂存区中删除)<br>\n git commit -m “remove” 移除文件 (从 Git 中删除)<br>\n git rm -f a.a 强行移除修改后文件 (从暂存区和工作区中删除)<br>\n git diff --cached 或 $ git diff --staged 查看尚未提交的更新<br>\n git stash push 将文件给 push 到一个临时空间中<br>\n git stash pop 将文件从临时空间 pop 下来<br>\n ---------------------------------------------------------<br>\ngit remote add origin <a href=\"mailto:git@github.com\">git@github.com</a>:username/Hello-World.git<br>\ngit push origin master 将本地项目给提交到服务器中<br>\n -----------------------------------------------------------<br>\ngit pull 本地与服务器端同步<br>\n -----------------------------------------------------------------<br>\ngit push (远程仓库名) (分支名) 将本地分支推送到服务器上去。<br>\ngit push origin serverfix:awesomebranch<br>\n------------------------------------------------------------------<br>\ngit fetch 相当于是从远程获取最新版本到本地，不会自动 merge<br>\ngit commit -a -m “log_message” (-a 是提交所有改动，-m 是加入 log 信息) 本地修改同步至服务器端 ：<br>\ngit branch branch_0.1 master 从主分支 master 创建 branch_0.1 分支<br>\n git branch -m branch_0.1 branch_1.0 将 branch_0.1 重命名为 branch_1.0<br>\ngit checkout branch_1.0/master 切换到 branch_1.0/master 分支<br>\n du -hs</p>\n<p>git branch 删除远程 branch<br>\ngit push origin :branch_remote_name<br>\ngit branch -r -d branch_remote_name<br>\n-----------------------------------------------------------</p>\n<p>初始化版本库，并提交到远程服务器端<br>\n mkdir WebApp<br>\ncd WebApp<br>\ngit init 本地初始化<br>\n touch README<br>\ngit add README 添加文件<br>\n git commit -m ‘first commit’<br>\ngit remote add origin <a href=\"mailto:git@github.com\">git@github.com</a>:daixu/WebApp.git</p>\n<p>增加一个远程服务器端</p>\n<p>上面的命令会增加 URL 地址为’git@github.com:daixu/WebApp.git’，名称为 origin 的远程服务器库，以后提交代码的时候只需要使用 origin 别名即可。</p>\n<p><img src=\"https://i.loli.net/2021/05/15/Tzf6gbO2hNJeXxi.png\" alt></p>\n",
            "tags": [
                "基本命令"
            ]
        },
        {
            "id": "https://liujiayi7.github.io/2021/05/04/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/",
            "url": "https://liujiayi7.github.io/2021/05/04/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/",
            "title": "Linux基本命令使用方法",
            "date_published": "2021-05-04T12:15:56.000Z",
            "content_html": "<p>## 一、基本命令</p>\n<p>###1、关机与重启</p>\n<p>关机<br>\n <code>shutdown -h now</code>     立刻关机<br>\n <code>shutdown -h n</code>  多长时间后关机（n 表示输入想要关机的时间数）<br>\n例如： <code>shutdown -h 5</code>     五分钟后关机<br>\n <code>power off</code>     立刻关机<br>\n重启<br>\n <code>shutdown -r now</code>     立刻重启<br>\n <code>shutdown -r n</code>     多长时间后重启<br>\n例如： <code>shutdown -r 5</code>    五分钟后重启<br>\n <code>reboot</code>    立刻重启</p>\n<p>###2、帮助命令</p>\n<p>help 命令<br>\n <code>shutdown --help</code> <br>\n <code>ifconfig --help</code>  查看网卡信息<br>\n man 命令（命令说明书）<br>\n <code>man shutdown</code> <br>\n 注意：想要退出命令说明书，点击 q 键即可！<br>\n<img src=\"https://i.loli.net/2021/05/15/7Yjx4TDfkJqoEzp.png\" alt></p>\n<p>###3、查看历史命令</p>\n<p>命令：history<br>\n<img src=\"https://i.loli.net/2021/05/15/nyeKY3AmUSHNGxD.png\" alt></p>\n<p>## 二、目录操作命令</p>\n<p>###1、目录切换命令</p>\n<p>命令：cd<br>\n <code>cd /</code>   切换到根目录<br>\n <code> cd /user</code>    切换到根目录下的 user 目录<br>\n <code> cd ../</code>    切换到上一级目录<br>\n <code>cd ./</code>   表示该目录本身<br>\n <code> cd ~</code>    切换到 home 目录<br>\n <code> cd -</code>     切换到上次访问的目录<br>\n<img src=\"https://i.loli.net/2021/05/15/UFIcwVGiYol5bEK.png\" alt></p>\n<p>###2、目录内容显示</p>\n<p>命令：ls、pwd<br>\n <code>ls </code>   查看当前目录下的所有目录和文件<br>\n <code>ls -l</code>    查看当前目录下的所有目录和文件（列表查看，显示更多详细信息）<br>\n <code>ls -a</code>    查看当前目录下所有目录和文件（包括隐藏的文件）</p>\n<p><code>ls -c</code>    按文件修改时间排序并显示<br>\n <code>ls -i</code>     在输出的第一行显示文件的索引节点号并显示<br>\n <code>ls -r</code>    按逆序显示 ls 命令的输出结果<br>\n <code>ls -R</code>    递归地显示指定目录的各个子目录中的文件<br>\n <code>ls /dir</code>   查看指定目录下的所有目录和文件<br>\n例如： <code>ls /um</code>    查看 um 目录下所有目录和文件<br>\n <code>pwd</code>   显示当前工作目录的绝对途径，无任何选项或参数</p>\n<p>###3、目录操作命令（包括对目录的增、删、改、查）</p>\n<p>####3-1、创建目录（增）</p>\n<p>命令：mkdir<br>\n <code>mkdir 目录名</code>    在当前目录下创建一个名为 XXX 的目录<br>\n例如： <code>mkdir abc</code>    在当前目录下创建一个名为 abc 的目录<br>\n <code>mkdir /user/目录名</code>    在指定目录下创建一个名为 XXX 的目录<br>\n例如： <code>mkdir /user/abc</code>    在 user 目录下创建一个名为 abc 的目录<br>\n注意：若无管理员权限，则在命令前加上 sudo 或者 su 命令<br>\n<img src=\"https://i.loli.net/2021/05/15/vK4FAlHRhYnq35Q.png\" alt></p>\n<p>####3-2、删除目录或文件（删）</p>\n<p>命令：rm/rmkdir<br>\n 删除文件:<br>\n <code>rm 文件名</code>    删除当前目录下的 XXX 文件<br>\n <code>rm -f 文件名</code>    删除当前目录下的 XXX 文件（不予询问）<br>\n删除目录：<br>\n <code>rm -r 目录名</code>    递归删除当前目录下的 XXX 目录（-r 表示递归）<br>\n <code>rm -rf 目录名</code>    递归删除当前目录下的 XXX 目录（不与询问）<br>\n <code>rmdir 目录名</code>    删除当前目录下的一个或多个空的子目录<br>\n <code>rmdir -p 目录名</code>    递归删除当前目录下的 XXX 目录（-p 表示递归）<br>\n注意：若无管理员权限，则在命令前加上 sudo 或者 su 命令</p>\n<p>####3-3、目录修改（改）</p>\n<p>命令：mv、cp<br>\n 目录重命名：<br>\n <code>mv 当前目录名 新目录名</code>    把当前目录名改为新目录名<br>\n例如： <code>mv abc aaa</code>    将目录 abc 改为 aaa<br>\n 注意：mv 命令同样可以对文件和压缩包等进行重命名操作，不只局限于目录！<br>\n目录拷贝：<br>\n <code>cp -r 目录名称 目录将要拷贝的位置</code>    将当前目录下的目录拷贝到目标位置<br>\n例如： <code>cp -r /home/abc  /um</code>    将 home 目录下的 abc 目录拷贝到 um 目录下<br>\n注意：cp 拷贝命令对压缩包和文件同样有效，但拷贝文件和压缩包时不用递归命令<br>\n目录剪切：<br>\n <code>mv 目录名称 目录目标位置</code>     将当前目录下的 XXXX 目录剪切到目标位置<br>\n例如： <code>mv /home/abc /um</code>     将 home 目录下的 abc 目录剪切到 um 目录下</p>\n<p>####3-4、目录搜索（查）</p>\n<p>命令：find<br>\n <code>find 目录 参数 文件名称</code> <br>\n例如： <code>find /home/tmp -name ‘a‘</code>    查找该目录下所有以 a 开头的目录或文件</p>\n<p>## 三、文件操作命令</p>\n<p>文件操作（增，删，改，查）</p>\n<p>###1、新建文件（增）</p>\n<p>命令：touch<br>\n <code>touch 文件名</code> <br>\n例如： <code> touch  a.txt </code>   在当前目录创建一个名为 a.txt 的文件</p>\n<p>###2、删除文件 （删）</p>\n<p>命令：rm<br>\n <code>rm -rf 文件名</code> <br>\n例如： <code>rm -rf a.tx</code>     删除当前目录下一个名为 a.txt 的文件<br>\n<img src=\"https://i.loli.net/2021/05/15/aLVpie2o154MvsK.png\" alt></p>\n<p>###3、修改文件（改）</p>\n<p>编辑器：vi、vim</p>\n<p>####3-1、打开文件：</p>\n<p>命令： <code>vi 文件名</code> <br>\n示例：打开当前目录下的 aa.txt 文件     <code> vi aa.txt 或者 vim aa.txt</code> <br>\n 注意：使用 vi 编辑器打开文件后，并不能编辑，因为此时处于命令模式，点击键盘 i/a/o 进入          编辑模式。</p>\n<p>####3-2、编辑文件：</p>\n<p>使用 vi 编辑器打开文件后点击按键：i ，a 或者 o 即可进入编辑模式。<br>\ni: 在光标所在字符前开始插入<br>\n a: 在光标所在字符后开始插入<br>\n o: 在光标所在行的下面另起一新行插入</p>\n<p>####3-3、保存文件：</p>\n<p>第一步：ESC  进入命令行模式<br>\n第二步:   :   进入底行模式<br>\n第三步：wq     保存并退出编辑</p>\n<p>####3-4、取消编辑：</p>\n<p>第一步：ESC  进入命令行模式<br>\n第二步：:     进入底行模式<br>\n第三步：q!     撤销本次修改并退出编辑<br>\n<img src=\"https://i.loli.net/2021/05/15/nfLxcb1Y4RSmwy7.png\" alt></p>\n<p>###4、查看文件（查）</p>\n<p>命令：cat/head/more/tail/less/od<br>\n <code>cat  文件名 </code>   查看文件最后一屏内容<br>\n <code>head 文件名 </code>  在屏幕上显示文件的开头若干行或多少个字节<br>\n <code>head -n 文件名</code>   指定从文件开头的显示行数，默认为十行<br>\n <code>more 文件名</code>    查看文件内容（可逐页显示）<br>\n <code>less 文件名</code>    分页显示文件内容<br>\n <code>tail 文件名</code>    查看文件后面的内容<br>\n <code>tail -n 文件名</code>    查看文件后几行的内容<br>\n <code>od 文件名</code>    将指定文件以八进制形式转出到标准输出<br>\n<img src=\"https://i.loli.net/2021/05/15/QNbGxDAB76X3gRr.png\" alt></p>\n<p>命令：sort<br>\n <code>sort 文件名</code>    对 XXX 文件内容按字母出现的先后顺序排列</p>\n<p>###6、比较文件内容</p>\n<p>命令：comm/diff<br>\n <code>comm 文件名 另一个文件名</code>    对两个已经排好序的文件内容进行比较<br>\n例如： <code>comm a.txt b.txt</code>    对 a.txt 和 b.txt 的文件内容进行比较<br>\n <code>diff 文件名 另一个文件名</code>    比较两个文本文件并找出他们的不同，根据不同的行列内容进行修改是他们内容相同<br>\n<img src=\"https://i.loli.net/2021/05/15/xeCb1Eag8J5TzVP.png\" alt></p>\n<p>###7、文件内容迁移</p>\n<p>命令：mv<br>\n <code>mv 文件名 另一个文件名</code>    将前一个文件的内容转移到后一个文件<br>\n <code>mv a.txt b.txt</code>    将 a 文件的内容转移的 b 文件中<br>\n <code>cat 文件名 另一个文件名 &gt;新的文件名</code>     将两个文件的内容合并起来转存到另一个新的文件中<br>\n例如： <code>cat f1 f2&gt;f3</code>    将 f1f2 两个文件的内容转存到文件 f3 中</p>\n<p>###8、文件内容查找</p>\n<p>命令：grep<br>\ngrep 选项 模式 文件 Minh   在文本文件中查找指定模式的单词或词语并在标准输出上显示包括给定字符串模式的所有行<br>\n例如： <code>grep -i 'home' /etc/passwd</code> <br>\n-i   表示忽略大小写<br>\n - x   表示强制整行匹配<br>\n - w   表示强制关键字完全匹配<br>\n - e   表示定义正则表达式<br>\n - m   定义多少次匹配后停止搜索<br>\n - n   指定输出的同时打印行号<br>\n - H   为每一匹配项打印文件名<br>\n - r   在指定目录中进行递归查询</p>\n<p>###9、文件内容统计</p>\n<p>命令：wc<br>\n <code>wc 文件名列表</code>    统计出指定文件的字节数、字数、行数并输出结果<br>\n输出格式：行数 字数 字节数 文件名<br>\n <code>wc -c 文件名</code>    统计字节数<br>\n <code>wc -l 文件名</code>    统计行数<br>\n <code>wc -w 文件名</code>    统计字数<br>\n<img src=\"https://i.loli.net/2021/05/15/cBHzeq3svQIUipK.png\" alt></p>\n<p>###10、文件查找</p>\n<p>命令：find、locate<br>\n <code>find 文件路径 匹配表达式  -exec 外部命令 &#123;&#125; \\;</code>   在目录结构中搜索满足查询条件的文件并执行指定操作（没有管理员权限在命令行前面加 sudo）</p>\n<p>例如:sudo find /etc -name “passwd” -exec grep “wang” {} ;   首先匹配到所有文件名为 “passwd” 的文件，再查找这些文件中含有 “wang” 用户的文件</p>\n<p><code>locate [选项] [模式]</code>    查找功能更强大，直接在数据库中查找，无需使用 sudo 命令</p>\n<p>例如： <code>locate chgpasswd</code>    查找所有含有 chgpasswd 的文件路径<br>\n - d   指定 locate 命令所使用的数据库<br>\n - c   只列出查到的条目数量<br>\n - A   列出匹配的所有条目<br>\n - w   匹配整个路径</p>\n<p>###11、创建链接文件</p>\n<p>命令：ln<br>\n <code>ln -s 文件或目录名 链接文件名 </code>     在文件之间创建链接<br>\n <code>ln 原文件 链接文件</code>    建立链接文件</p>\n<p>###12、文件压缩与解压缩、打包与解包</p>\n<p>命令：gzip、unzip、tar<br>\n 文件压缩：<br>\n <code>gzip 文件名</code>    压缩当前目录下的 XXX 文件<br>\n <code>tar zcvf 压缩文件名.tar.gz 文件名</code>    单个文件压缩打包<br>\n <code>tar zcvf 压缩文件名.tar.gz 文件1 文件2...</code>    多个文件压缩打包<br>\n文件解压缩：<br>\n <code>gunzip 解压缩文件名</code> <br>\n <code>gzip -d 解压缩文件名</code> <br>\n <code>tar zxvf 解压缩文件名.tar.gz</code> <br>\n<img src=\"https://i.loli.net/2021/05/15/mwovaYUL9fePkI3.png\" alt></p>\n<p>###13、权限修改</p>\n<p>rwx：r 代表可读，w 代表可写，x 代表该文件是一个可执行文件，如果 rwx 任意位置变为 - 则代表不可读或不可写或不可执行文件。<br>\n第一段（3 位）：代表拥有者的权限<br>\n第二段（3 位）：代表拥有者所在的组，组员的权限<br>\n第三段（最后 3 位）：代表的是其他用户的权限<br>\n 例如：421  421  421</p>\n<ul>\n<li>rw-   —     —<br>\n 命令：chmod<br>\n <code>chmod 选项 文件名</code> <br>\n例如： <code>chmod u+r  aaa.txt</code>     将 aaa 文件的所有者权限加上可读<br>\n <code>chmod u-r  aaa.txt</code>     将 aaa 文件的所有者权限删去可读<br>\n或者采用 8421 法<br>\n例如： <code>chmod 377 aaa.txt</code>    将 aaa 文件的所有者权限删去可读<br>\n注意：若无管理员权限，则在命令前加上 sudo 或者 su 命令<br>\n<img src=\"https://i.loli.net/2021/05/15/3cNp4zxSeHIAElV.png\" alt></li>\n</ul>\n<p>###14、变更文件访问者身份</p>\n<p>####14-1、变更所有者</p>\n<p>命令：chown<br>\n <code>chown 选项 新所有者 文件列表</code>    变更文件所有者，是其他用户对文件具有使用权</p>\n<p><code>-R   表示递归变更，目录连同其子目录下的所有文件的所有者都变更</code></p>\n<p><code>注意：执行chown命令需要root权限，在命令行前面加上sudo</code></p>\n<p>例如： <code>sudo chown wang news</code>    将 news 的所有者改为 wang</p>\n<p>####14-2、变更所属组</p>\n<p>命令：chgrp<br>\n <code>chgrp 选项 新的所属组名 文件列表</code></p>\n<p><code>-R   表示递归变更，目录连同其子目录下的所有文件的所有者都变更所属组</code></p>\n<p><code>chown 选项 新所有者 ：新所属组 文件列表</code>    同时变更文件的所有者和所属组 `</p>\n<p><code>注意：执行chgrp命令需要root权限，在命令行前面加上sudo</code></p>\n<p><img src=\"https://i.loli.net/2021/05/15/RGaBezESCHlyPts.png\" alt></p>\n<p>## 四、管理用户和组</p>\n<p>###1、管理用户账户</p>\n<p>命令：grep<br>\n <code>cat /etc/passwd | grep 用户名</code>    通过查看用户配置文件来查找其中包含该用户名的文件<br>\n<img src=\"https://i.loli.net/2021/05/15/sIQTJ4tZc5a2yhD.png\" alt></p>\n<p>###2、添加用户账户</p>\n<p>命令：useradd、adduser<br>\n <code>useradd -选项 用户名</code>     添加用户<br>\n - d   用于指定用户主目录<br>\n - g   用于指定该用户的所属组<br>\n - G   用于指定用户所属其他组列表<br>\n - r   用于创建一个系统账户（不会创建主目录，默认为 /bin/bash）<br>\n-s   指定用户登录时使用的 shell 脚本<br>\n - u   指定新用户的 UID<br>\n <code>注意：无root使用权限时，在命令行前面加sudo即可</code> <br>\n - D  用于显示或更改默认的 useradd 配置<br>\n <code>useradd -D 选项</code>    用于修改默认的 useradd 配置<br>\n - g    表示默认组<br>\n - b   表示默认目录<br>\n - f   表示过期禁用<br>\n - e   表示过期日期<br>\n - s   表示默认 shell<br>\n <code>sudo adduser 用户名</code>     添加用户并设置相关信息</p>\n<p>###3、管理用户账户密码</p>\n<p><code>passwd 选项 用户名</code>    为用户设置密码<br>\n例如： <code>passwd wang</code>    为用户 wang 设置密码<br>\n <code>passwd -l 用户名</code>    锁定账户密码<br>\n <code>passwd -d 用户名</code>    删除账户密码<br>\n <code>passwd -S 用户名</code>    查看某账户当前的状态<br>\n <code>passwd -u 用户名</code>    解除账户密码锁定<br>\n <code>注意：无root使用权限时，在命令行前面加sudo即可</code></p>\n<p>###4、修改用户账户</p>\n<p>命令：usermod、chfn<br>\n <code>usermod 选项 用户名</code>    修改用户的各项信息</p>\n<p><code>usermod -l 新用户名</code>  原用户名   更改用于账户名</p>\n<p><code>usermod -L 用户名</code>    锁定该用户账户，临时禁止登录</p>\n<p><code>usermod -U 用户名</code>    解除锁定</p>\n<p><code>chfn 选项 用户名</code>    更改用户的个人信息</p>\n<p><code>chfn -f 用户名</code>    更改用户的全名（真实姓名）</p>\n<p><code>chfn -h 用户名</code>    更改用户的家庭电话</p>\n<p><code>chfn -o 用户名</code>    更改用户的办公地址</p>\n<p><code>注意：无root使用权限时，在命令行前面加sudo即可</code></p>\n<p>###5、删除用户账户</p>\n<p>命令：userdel、deluser<br>\n <code>userdel 选项 用户名</code>     删除用户账户</p>\n<p><code>userdel -r 用户名</code>    递归删除该账户下的主目录和邮件目录</p>\n<p>注意：不允许删除正在使用的用户账户 `</p>\n<p><code>deluser --remove-home 用户名</code>    表示同时删除用户的主目录和邮箱</p>\n<p><code>deluser --remove-all-files 用户名</code>    表示删除用户拥有的所有文件</p>\n<p><code>deluser --backup 用户名</code>    表示删除用户之前将文件备份</p>\n<p><code>deluser --system 用户名</code>   表示只有当该用户是系统用户时才删除</p>\n<p><code>deluser --backup-to 目录名 用户名</code>    表示指定备份的目标目录</p>\n<p>###6、创建组账户</p>\n<p>命令： groupadd<br>\n <code>groupadd 选项 组名</code>     创建一个组账户</p>\n<p><code>groupadd -g 组名</code>    自行指定组的 GID</p>\n<p><code>groupadd -r 组名</code>     创建系统组，GID 值小于 500（不带此选项，则创建的为普通组<br>\n）<br>\n <code>addgroup --gid ID 组名</code>     添加一个普通用户组</p>\n<p><code>addgroup --system --gid 组 ID 组名 </code>    添加一个管理员用户组</p>\n<p>###7、修改组账户</p>\n<p>命令： <code>groupmod -g GID -n 新组名 组名</code>    修改用户组的组名和 GID 值</p>\n<p>###8、删除组账户</p>\n<p>命令：groupdel 、delgroup<br>\n <code>groupdel 组名</code>    删除用户组</p>\n<p><code>delgroup ---system 组名</code>    表示只有当该用户组是系统用户组时才删除</p>\n<p><code>delgroup --only-if-empty</code>    表示只有当该用户组中无成员时才删除</p>\n<p>###9、管理组成员</p>\n<p>####9-1、显示某用户所属的全部组</p>\n<p>命令：groups<br>\n <code>注意：如果没有指定用户名则默认为当前登录用户</code></p>\n<p>####9-2、将用户添加到指定的组</p>\n<p>命令：gpasswd、adduser<br>\n <code>gpapsswd -a 用户名 组名</code>    将用户添加到指定的组，使其成为该组的成员</p>\n<p><code>gpapsswd -d 用户名 组名</code>    将用户从该组中删除</p>\n<p><code>gpasswd -M 用户名，用户名，... 组名</code>    将多个用户添加到该组中，使之成为组成员</p>\n<p><code>adduser 用户名 组名</code>    将用户添加到指定的组，使其成为该组的成员</p>\n<p><code>deluser 用户名 组名</code>    将用户从该组中删除</p>\n<p>###10、查看其它用户管理命令</p>\n<p>####10-1、查看用户信息</p>\n<p>命令：id<br>\n <code>id 选项 用户名</code>    查看指定用户或当前用户的信息<br>\n <code>注意：若不指定用户名，则将显示当前登录的用户的信息，若指定用户名，则显示该账户信息</code></p>\n<p>####10-2、查看登录用户</p>\n<p>命令：who 、last、w<br>\n <code>who    显示当前登陆的用户账户</code> <br>\n <code>last   查看系统的历史登陆情况</code> <br>\n <code>last 用户名   查看某个用户的历史登陆情况</code> <br>\n <code>last -n   查看系统最近几次的登陆情况</code> <br>\n <code>w   查看用户的执行进程</code></p>\n<p>## 五、编译 C 程序</p>\n<p>###1、安装 gcc 编译器</p>\n<p>命令： <code>sudo apt install gcc</code> <br>\n <code>注意：安装之后可以用该命令查看版本:gcc -v</code></p>\n<p>###2、开始编译</p>\n<p>命令： <code>gcc 选项 源文件 </code> 注意：保存源文件时将拓展名设置为文件名.c`</p>\n<p><code>sudo gcc -o 源文件名称</code>    对该源文件进行预处理、编译、汇编并连接形成可执行文件</p>\n<p><code>-E  对源文件进行预处理，生成名为文件名.i的源代码文件</code></p>\n<p><code>-S 对源文件进行预处理和编译，生成名为文件名.s的汇编代码文件</code></p>\n<p><code>-c 对源文件进行预处理、编译和汇编，生成名为.c同名目标文件</code></p>\n<p>注意：若无指定输出文件，则默认输出文件名为 a.out</p>\n<p>###3、在命令行中执行程序</p>\n<p>命令： <code>./文件名</code>    完成编译和连接后在命令行中执行</p>\n",
            "tags": [
                "基本命令"
            ]
        }
    ]
}