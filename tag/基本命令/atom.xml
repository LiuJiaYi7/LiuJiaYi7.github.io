<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://LiuJiaYi7.github.io</id>
    <title>LiuJiaYi7&#39;s blog • Posts by &#34;基本命令&#34; tag</title>
    <link href="https://LiuJiaYi7.github.io" />
    <updated>2021-05-15T09:54:45.000Z</updated>
    <category term="随笔" />
    <category term="笔记" />
    <category term="习题" />
    <category term="基本命令" />
    <category term="记录" />
    <category term="小结" />
    <entry>
        <id>https://liujiayi7.github.io/2021/05/15/git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</id>
        <title>git基本命令</title>
        <link rel="alternate" href="https://liujiayi7.github.io/2021/05/15/git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
        <content type="html">&lt;p&gt;#一、 Git 常用命令速查&lt;/p&gt;
&lt;p&gt;git branch 查看本地所有分支&lt;br&gt;
 git status 查看当前状态&lt;br&gt;
 git commit 提交&lt;br&gt;
 git branch -a 查看所有的分支&lt;br&gt;
 git branch -r 查看远程所有分支&lt;br&gt;
 git commit -am “init” 提交并且加注释&lt;br&gt;
 git remote add origin &lt;a href=&#34;mailto:git@192.168.1.119&#34;&gt;git@192.168.1.119&lt;/a&gt;:ndshow&lt;br&gt;
git push origin master 将文件给推到服务器上&lt;br&gt;
 git remote show origin 显示远程库 origin 里的资源&lt;br&gt;
 git push origin master:develop&lt;br&gt;
git push origin master:hb-dev 将本地库与服务器上的库进行关联&lt;br&gt;
 git checkout --track origin/dev 切换到远程 dev 分支&lt;br&gt;
 git branch -D master develop 删除本地库 develop&lt;br&gt;
git checkout -b dev 建立一个新的本地分支 dev&lt;br&gt;
git merge origin/dev 将分支 dev 与当前分支进行合并&lt;br&gt;
 git checkout dev 切换到本地 dev 分支&lt;br&gt;
 git remote show 查看远程库&lt;br&gt;
 git add .&lt;br&gt;
git rm 文件名 (包括路径) 从 git 中删除指定文件&lt;br&gt;
 git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来&lt;br&gt;
 git config --list 看所有用户&lt;br&gt;
 git ls-files 看已经被提交的&lt;br&gt;
 git rm [file name] 删除一个文件&lt;br&gt;
 git commit -a 提交当前 repos 的所有的改变&lt;br&gt;
 git add [file name] 添加一个文件到 git index&lt;br&gt;
git commit -v 当你用－v 参数的时候可以看 commit 的差异&lt;br&gt;
 git commit -m “This is the message describing the commit” 添加 commit 信息&lt;br&gt;
 git commit -a -a 是代表 add，把所有的 change 加到 git index 里然后再 commit&lt;br&gt;
git commit -a -v 一般提交命令&lt;br&gt;
 git log 看你 commit 的日志&lt;br&gt;
 git diff 查看尚未暂存的更新&lt;br&gt;
 git rm a.a 移除文件 (从暂存区和工作区中删除)&lt;br&gt;
 git rm --cached a.a 移除文件 (只从暂存区中删除)&lt;br&gt;
 git commit -m “remove” 移除文件 (从 Git 中删除)&lt;br&gt;
 git rm -f a.a 强行移除修改后文件 (从暂存区和工作区中删除)&lt;br&gt;
 git diff --cached 或 $ git diff --staged 查看尚未提交的更新&lt;br&gt;
 git stash push 将文件给 push 到一个临时空间中&lt;br&gt;
 git stash pop 将文件从临时空间 pop 下来&lt;br&gt;
 ---------------------------------------------------------&lt;br&gt;
git remote add origin &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:username/Hello-World.git&lt;br&gt;
git push origin master 将本地项目给提交到服务器中&lt;br&gt;
 -----------------------------------------------------------&lt;br&gt;
git pull 本地与服务器端同步&lt;br&gt;
 -----------------------------------------------------------------&lt;br&gt;
git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。&lt;br&gt;
git push origin serverfix:awesomebranch&lt;br&gt;
------------------------------------------------------------------&lt;br&gt;
git fetch 相当于是从远程获取最新版本到本地，不会自动 merge&lt;br&gt;
git commit -a -m “log_message” (-a 是提交所有改动，-m 是加入 log 信息) 本地修改同步至服务器端 ：&lt;br&gt;
git branch branch_0.1 master 从主分支 master 创建 branch_0.1 分支&lt;br&gt;
 git branch -m branch_0.1 branch_1.0 将 branch_0.1 重命名为 branch_1.0&lt;br&gt;
git checkout branch_1.0/master 切换到 branch_1.0/master 分支&lt;br&gt;
 du -hs&lt;/p&gt;
&lt;p&gt;git branch 删除远程 branch&lt;br&gt;
git push origin :branch_remote_name&lt;br&gt;
git branch -r -d branch_remote_name&lt;br&gt;
-----------------------------------------------------------&lt;/p&gt;
&lt;p&gt;初始化版本库，并提交到远程服务器端&lt;br&gt;
 mkdir WebApp&lt;br&gt;
cd WebApp&lt;br&gt;
git init 本地初始化&lt;br&gt;
 touch README&lt;br&gt;
git add README 添加文件&lt;br&gt;
 git commit -m ‘first commit’&lt;br&gt;
git remote add origin &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:daixu/WebApp.git&lt;/p&gt;
&lt;p&gt;增加一个远程服务器端&lt;/p&gt;
&lt;p&gt;上面的命令会增加 URL 地址为’git@github.com:daixu/WebApp.git’，名称为 origin 的远程服务器库，以后提交代码的时候只需要使用 origin 别名即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/05/15/Tzf6gbO2hNJeXxi.png&#34; alt&gt;&lt;/p&gt;
</content>
        <category term="基本命令" />
        <updated>2021-05-15T09:54:45.000Z</updated>
    </entry>
    <entry>
        <id>https://liujiayi7.github.io/2021/05/04/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
        <title>Linux基本命令使用方法</title>
        <link rel="alternate" href="https://liujiayi7.github.io/2021/05/04/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
        <content type="html">&lt;p&gt;## 一、基本命令&lt;/p&gt;
&lt;p&gt;###1、关机与重启&lt;/p&gt;
&lt;p&gt;关机&lt;br&gt;
 &lt;code&gt;shutdown -h now&lt;/code&gt;     立刻关机&lt;br&gt;
 &lt;code&gt;shutdown -h n&lt;/code&gt;  多长时间后关机（n 表示输入想要关机的时间数）&lt;br&gt;
例如： &lt;code&gt;shutdown -h 5&lt;/code&gt;     五分钟后关机&lt;br&gt;
 &lt;code&gt;power off&lt;/code&gt;     立刻关机&lt;br&gt;
重启&lt;br&gt;
 &lt;code&gt;shutdown -r now&lt;/code&gt;     立刻重启&lt;br&gt;
 &lt;code&gt;shutdown -r n&lt;/code&gt;     多长时间后重启&lt;br&gt;
例如： &lt;code&gt;shutdown -r 5&lt;/code&gt;    五分钟后重启&lt;br&gt;
 &lt;code&gt;reboot&lt;/code&gt;    立刻重启&lt;/p&gt;
&lt;p&gt;###2、帮助命令&lt;/p&gt;
&lt;p&gt;help 命令&lt;br&gt;
 &lt;code&gt;shutdown --help&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;ifconfig --help&lt;/code&gt;  查看网卡信息&lt;br&gt;
 man 命令（命令说明书）&lt;br&gt;
 &lt;code&gt;man shutdown&lt;/code&gt; &lt;br&gt;
 注意：想要退出命令说明书，点击 q 键即可！&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/7Yjx4TDfkJqoEzp.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###3、查看历史命令&lt;/p&gt;
&lt;p&gt;命令：history&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/nyeKY3AmUSHNGxD.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;## 二、目录操作命令&lt;/p&gt;
&lt;p&gt;###1、目录切换命令&lt;/p&gt;
&lt;p&gt;命令：cd&lt;br&gt;
 &lt;code&gt;cd /&lt;/code&gt;   切换到根目录&lt;br&gt;
 &lt;code&gt; cd /user&lt;/code&gt;    切换到根目录下的 user 目录&lt;br&gt;
 &lt;code&gt; cd ../&lt;/code&gt;    切换到上一级目录&lt;br&gt;
 &lt;code&gt;cd ./&lt;/code&gt;   表示该目录本身&lt;br&gt;
 &lt;code&gt; cd ~&lt;/code&gt;    切换到 home 目录&lt;br&gt;
 &lt;code&gt; cd -&lt;/code&gt;     切换到上次访问的目录&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/UFIcwVGiYol5bEK.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###2、目录内容显示&lt;/p&gt;
&lt;p&gt;命令：ls、pwd&lt;br&gt;
 &lt;code&gt;ls &lt;/code&gt;   查看当前目录下的所有目录和文件&lt;br&gt;
 &lt;code&gt;ls -l&lt;/code&gt;    查看当前目录下的所有目录和文件（列表查看，显示更多详细信息）&lt;br&gt;
 &lt;code&gt;ls -a&lt;/code&gt;    查看当前目录下所有目录和文件（包括隐藏的文件）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -c&lt;/code&gt;    按文件修改时间排序并显示&lt;br&gt;
 &lt;code&gt;ls -i&lt;/code&gt;     在输出的第一行显示文件的索引节点号并显示&lt;br&gt;
 &lt;code&gt;ls -r&lt;/code&gt;    按逆序显示 ls 命令的输出结果&lt;br&gt;
 &lt;code&gt;ls -R&lt;/code&gt;    递归地显示指定目录的各个子目录中的文件&lt;br&gt;
 &lt;code&gt;ls /dir&lt;/code&gt;   查看指定目录下的所有目录和文件&lt;br&gt;
例如： &lt;code&gt;ls /um&lt;/code&gt;    查看 um 目录下所有目录和文件&lt;br&gt;
 &lt;code&gt;pwd&lt;/code&gt;   显示当前工作目录的绝对途径，无任何选项或参数&lt;/p&gt;
&lt;p&gt;###3、目录操作命令（包括对目录的增、删、改、查）&lt;/p&gt;
&lt;p&gt;####3-1、创建目录（增）&lt;/p&gt;
&lt;p&gt;命令：mkdir&lt;br&gt;
 &lt;code&gt;mkdir 目录名&lt;/code&gt;    在当前目录下创建一个名为 XXX 的目录&lt;br&gt;
例如： &lt;code&gt;mkdir abc&lt;/code&gt;    在当前目录下创建一个名为 abc 的目录&lt;br&gt;
 &lt;code&gt;mkdir /user/目录名&lt;/code&gt;    在指定目录下创建一个名为 XXX 的目录&lt;br&gt;
例如： &lt;code&gt;mkdir /user/abc&lt;/code&gt;    在 user 目录下创建一个名为 abc 的目录&lt;br&gt;
注意：若无管理员权限，则在命令前加上 sudo 或者 su 命令&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/vK4FAlHRhYnq35Q.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;####3-2、删除目录或文件（删）&lt;/p&gt;
&lt;p&gt;命令：rm/rmkdir&lt;br&gt;
 删除文件:&lt;br&gt;
 &lt;code&gt;rm 文件名&lt;/code&gt;    删除当前目录下的 XXX 文件&lt;br&gt;
 &lt;code&gt;rm -f 文件名&lt;/code&gt;    删除当前目录下的 XXX 文件（不予询问）&lt;br&gt;
删除目录：&lt;br&gt;
 &lt;code&gt;rm -r 目录名&lt;/code&gt;    递归删除当前目录下的 XXX 目录（-r 表示递归）&lt;br&gt;
 &lt;code&gt;rm -rf 目录名&lt;/code&gt;    递归删除当前目录下的 XXX 目录（不与询问）&lt;br&gt;
 &lt;code&gt;rmdir 目录名&lt;/code&gt;    删除当前目录下的一个或多个空的子目录&lt;br&gt;
 &lt;code&gt;rmdir -p 目录名&lt;/code&gt;    递归删除当前目录下的 XXX 目录（-p 表示递归）&lt;br&gt;
注意：若无管理员权限，则在命令前加上 sudo 或者 su 命令&lt;/p&gt;
&lt;p&gt;####3-3、目录修改（改）&lt;/p&gt;
&lt;p&gt;命令：mv、cp&lt;br&gt;
 目录重命名：&lt;br&gt;
 &lt;code&gt;mv 当前目录名 新目录名&lt;/code&gt;    把当前目录名改为新目录名&lt;br&gt;
例如： &lt;code&gt;mv abc aaa&lt;/code&gt;    将目录 abc 改为 aaa&lt;br&gt;
 注意：mv 命令同样可以对文件和压缩包等进行重命名操作，不只局限于目录！&lt;br&gt;
目录拷贝：&lt;br&gt;
 &lt;code&gt;cp -r 目录名称 目录将要拷贝的位置&lt;/code&gt;    将当前目录下的目录拷贝到目标位置&lt;br&gt;
例如： &lt;code&gt;cp -r /home/abc  /um&lt;/code&gt;    将 home 目录下的 abc 目录拷贝到 um 目录下&lt;br&gt;
注意：cp 拷贝命令对压缩包和文件同样有效，但拷贝文件和压缩包时不用递归命令&lt;br&gt;
目录剪切：&lt;br&gt;
 &lt;code&gt;mv 目录名称 目录目标位置&lt;/code&gt;     将当前目录下的 XXXX 目录剪切到目标位置&lt;br&gt;
例如： &lt;code&gt;mv /home/abc /um&lt;/code&gt;     将 home 目录下的 abc 目录剪切到 um 目录下&lt;/p&gt;
&lt;p&gt;####3-4、目录搜索（查）&lt;/p&gt;
&lt;p&gt;命令：find&lt;br&gt;
 &lt;code&gt;find 目录 参数 文件名称&lt;/code&gt; &lt;br&gt;
例如： &lt;code&gt;find /home/tmp -name ‘a‘&lt;/code&gt;    查找该目录下所有以 a 开头的目录或文件&lt;/p&gt;
&lt;p&gt;## 三、文件操作命令&lt;/p&gt;
&lt;p&gt;文件操作（增，删，改，查）&lt;/p&gt;
&lt;p&gt;###1、新建文件（增）&lt;/p&gt;
&lt;p&gt;命令：touch&lt;br&gt;
 &lt;code&gt;touch 文件名&lt;/code&gt; &lt;br&gt;
例如： &lt;code&gt; touch  a.txt &lt;/code&gt;   在当前目录创建一个名为 a.txt 的文件&lt;/p&gt;
&lt;p&gt;###2、删除文件 （删）&lt;/p&gt;
&lt;p&gt;命令：rm&lt;br&gt;
 &lt;code&gt;rm -rf 文件名&lt;/code&gt; &lt;br&gt;
例如： &lt;code&gt;rm -rf a.tx&lt;/code&gt;     删除当前目录下一个名为 a.txt 的文件&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/aLVpie2o154MvsK.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###3、修改文件（改）&lt;/p&gt;
&lt;p&gt;编辑器：vi、vim&lt;/p&gt;
&lt;p&gt;####3-1、打开文件：&lt;/p&gt;
&lt;p&gt;命令： &lt;code&gt;vi 文件名&lt;/code&gt; &lt;br&gt;
示例：打开当前目录下的 aa.txt 文件     &lt;code&gt; vi aa.txt 或者 vim aa.txt&lt;/code&gt; &lt;br&gt;
 注意：使用 vi 编辑器打开文件后，并不能编辑，因为此时处于命令模式，点击键盘 i/a/o 进入          编辑模式。&lt;/p&gt;
&lt;p&gt;####3-2、编辑文件：&lt;/p&gt;
&lt;p&gt;使用 vi 编辑器打开文件后点击按键：i ，a 或者 o 即可进入编辑模式。&lt;br&gt;
i: 在光标所在字符前开始插入&lt;br&gt;
 a: 在光标所在字符后开始插入&lt;br&gt;
 o: 在光标所在行的下面另起一新行插入&lt;/p&gt;
&lt;p&gt;####3-3、保存文件：&lt;/p&gt;
&lt;p&gt;第一步：ESC  进入命令行模式&lt;br&gt;
第二步:   :   进入底行模式&lt;br&gt;
第三步：wq     保存并退出编辑&lt;/p&gt;
&lt;p&gt;####3-4、取消编辑：&lt;/p&gt;
&lt;p&gt;第一步：ESC  进入命令行模式&lt;br&gt;
第二步：:     进入底行模式&lt;br&gt;
第三步：q!     撤销本次修改并退出编辑&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/nfLxcb1Y4RSmwy7.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###4、查看文件（查）&lt;/p&gt;
&lt;p&gt;命令：cat/head/more/tail/less/od&lt;br&gt;
 &lt;code&gt;cat  文件名 &lt;/code&gt;   查看文件最后一屏内容&lt;br&gt;
 &lt;code&gt;head 文件名 &lt;/code&gt;  在屏幕上显示文件的开头若干行或多少个字节&lt;br&gt;
 &lt;code&gt;head -n 文件名&lt;/code&gt;   指定从文件开头的显示行数，默认为十行&lt;br&gt;
 &lt;code&gt;more 文件名&lt;/code&gt;    查看文件内容（可逐页显示）&lt;br&gt;
 &lt;code&gt;less 文件名&lt;/code&gt;    分页显示文件内容&lt;br&gt;
 &lt;code&gt;tail 文件名&lt;/code&gt;    查看文件后面的内容&lt;br&gt;
 &lt;code&gt;tail -n 文件名&lt;/code&gt;    查看文件后几行的内容&lt;br&gt;
 &lt;code&gt;od 文件名&lt;/code&gt;    将指定文件以八进制形式转出到标准输出&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/QNbGxDAB76X3gRr.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;命令：sort&lt;br&gt;
 &lt;code&gt;sort 文件名&lt;/code&gt;    对 XXX 文件内容按字母出现的先后顺序排列&lt;/p&gt;
&lt;p&gt;###6、比较文件内容&lt;/p&gt;
&lt;p&gt;命令：comm/diff&lt;br&gt;
 &lt;code&gt;comm 文件名 另一个文件名&lt;/code&gt;    对两个已经排好序的文件内容进行比较&lt;br&gt;
例如： &lt;code&gt;comm a.txt b.txt&lt;/code&gt;    对 a.txt 和 b.txt 的文件内容进行比较&lt;br&gt;
 &lt;code&gt;diff 文件名 另一个文件名&lt;/code&gt;    比较两个文本文件并找出他们的不同，根据不同的行列内容进行修改是他们内容相同&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/xeCb1Eag8J5TzVP.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###7、文件内容迁移&lt;/p&gt;
&lt;p&gt;命令：mv&lt;br&gt;
 &lt;code&gt;mv 文件名 另一个文件名&lt;/code&gt;    将前一个文件的内容转移到后一个文件&lt;br&gt;
 &lt;code&gt;mv a.txt b.txt&lt;/code&gt;    将 a 文件的内容转移的 b 文件中&lt;br&gt;
 &lt;code&gt;cat 文件名 另一个文件名 &amp;gt;新的文件名&lt;/code&gt;     将两个文件的内容合并起来转存到另一个新的文件中&lt;br&gt;
例如： &lt;code&gt;cat f1 f2&amp;gt;f3&lt;/code&gt;    将 f1f2 两个文件的内容转存到文件 f3 中&lt;/p&gt;
&lt;p&gt;###8、文件内容查找&lt;/p&gt;
&lt;p&gt;命令：grep&lt;br&gt;
grep 选项 模式 文件 Minh   在文本文件中查找指定模式的单词或词语并在标准输出上显示包括给定字符串模式的所有行&lt;br&gt;
例如： &lt;code&gt;grep -i &#39;home&#39; /etc/passwd&lt;/code&gt; &lt;br&gt;
-i   表示忽略大小写&lt;br&gt;
 - x   表示强制整行匹配&lt;br&gt;
 - w   表示强制关键字完全匹配&lt;br&gt;
 - e   表示定义正则表达式&lt;br&gt;
 - m   定义多少次匹配后停止搜索&lt;br&gt;
 - n   指定输出的同时打印行号&lt;br&gt;
 - H   为每一匹配项打印文件名&lt;br&gt;
 - r   在指定目录中进行递归查询&lt;/p&gt;
&lt;p&gt;###9、文件内容统计&lt;/p&gt;
&lt;p&gt;命令：wc&lt;br&gt;
 &lt;code&gt;wc 文件名列表&lt;/code&gt;    统计出指定文件的字节数、字数、行数并输出结果&lt;br&gt;
输出格式：行数 字数 字节数 文件名&lt;br&gt;
 &lt;code&gt;wc -c 文件名&lt;/code&gt;    统计字节数&lt;br&gt;
 &lt;code&gt;wc -l 文件名&lt;/code&gt;    统计行数&lt;br&gt;
 &lt;code&gt;wc -w 文件名&lt;/code&gt;    统计字数&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/cBHzeq3svQIUipK.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###10、文件查找&lt;/p&gt;
&lt;p&gt;命令：find、locate&lt;br&gt;
 &lt;code&gt;find 文件路径 匹配表达式  -exec 外部命令 &amp;#123;&amp;#125; \;&lt;/code&gt;   在目录结构中搜索满足查询条件的文件并执行指定操作（没有管理员权限在命令行前面加 sudo）&lt;/p&gt;
&lt;p&gt;例如:sudo find /etc -name “passwd” -exec grep “wang” {} ;   首先匹配到所有文件名为 “passwd” 的文件，再查找这些文件中含有 “wang” 用户的文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;locate [选项] [模式]&lt;/code&gt;    查找功能更强大，直接在数据库中查找，无需使用 sudo 命令&lt;/p&gt;
&lt;p&gt;例如： &lt;code&gt;locate chgpasswd&lt;/code&gt;    查找所有含有 chgpasswd 的文件路径&lt;br&gt;
 - d   指定 locate 命令所使用的数据库&lt;br&gt;
 - c   只列出查到的条目数量&lt;br&gt;
 - A   列出匹配的所有条目&lt;br&gt;
 - w   匹配整个路径&lt;/p&gt;
&lt;p&gt;###11、创建链接文件&lt;/p&gt;
&lt;p&gt;命令：ln&lt;br&gt;
 &lt;code&gt;ln -s 文件或目录名 链接文件名 &lt;/code&gt;     在文件之间创建链接&lt;br&gt;
 &lt;code&gt;ln 原文件 链接文件&lt;/code&gt;    建立链接文件&lt;/p&gt;
&lt;p&gt;###12、文件压缩与解压缩、打包与解包&lt;/p&gt;
&lt;p&gt;命令：gzip、unzip、tar&lt;br&gt;
 文件压缩：&lt;br&gt;
 &lt;code&gt;gzip 文件名&lt;/code&gt;    压缩当前目录下的 XXX 文件&lt;br&gt;
 &lt;code&gt;tar zcvf 压缩文件名.tar.gz 文件名&lt;/code&gt;    单个文件压缩打包&lt;br&gt;
 &lt;code&gt;tar zcvf 压缩文件名.tar.gz 文件1 文件2...&lt;/code&gt;    多个文件压缩打包&lt;br&gt;
文件解压缩：&lt;br&gt;
 &lt;code&gt;gunzip 解压缩文件名&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;gzip -d 解压缩文件名&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;tar zxvf 解压缩文件名.tar.gz&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/mwovaYUL9fePkI3.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###13、权限修改&lt;/p&gt;
&lt;p&gt;rwx：r 代表可读，w 代表可写，x 代表该文件是一个可执行文件，如果 rwx 任意位置变为 - 则代表不可读或不可写或不可执行文件。&lt;br&gt;
第一段（3 位）：代表拥有者的权限&lt;br&gt;
第二段（3 位）：代表拥有者所在的组，组员的权限&lt;br&gt;
第三段（最后 3 位）：代表的是其他用户的权限&lt;br&gt;
 例如：421  421  421&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rw-   —     —&lt;br&gt;
 命令：chmod&lt;br&gt;
 &lt;code&gt;chmod 选项 文件名&lt;/code&gt; &lt;br&gt;
例如： &lt;code&gt;chmod u+r  aaa.txt&lt;/code&gt;     将 aaa 文件的所有者权限加上可读&lt;br&gt;
 &lt;code&gt;chmod u-r  aaa.txt&lt;/code&gt;     将 aaa 文件的所有者权限删去可读&lt;br&gt;
或者采用 8421 法&lt;br&gt;
例如： &lt;code&gt;chmod 377 aaa.txt&lt;/code&gt;    将 aaa 文件的所有者权限删去可读&lt;br&gt;
注意：若无管理员权限，则在命令前加上 sudo 或者 su 命令&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/3cNp4zxSeHIAElV.png&#34; alt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###14、变更文件访问者身份&lt;/p&gt;
&lt;p&gt;####14-1、变更所有者&lt;/p&gt;
&lt;p&gt;命令：chown&lt;br&gt;
 &lt;code&gt;chown 选项 新所有者 文件列表&lt;/code&gt;    变更文件所有者，是其他用户对文件具有使用权&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-R   表示递归变更，目录连同其子目录下的所有文件的所有者都变更&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意：执行chown命令需要root权限，在命令行前面加上sudo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如： &lt;code&gt;sudo chown wang news&lt;/code&gt;    将 news 的所有者改为 wang&lt;/p&gt;
&lt;p&gt;####14-2、变更所属组&lt;/p&gt;
&lt;p&gt;命令：chgrp&lt;br&gt;
 &lt;code&gt;chgrp 选项 新的所属组名 文件列表&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-R   表示递归变更，目录连同其子目录下的所有文件的所有者都变更所属组&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chown 选项 新所有者 ：新所属组 文件列表&lt;/code&gt;    同时变更文件的所有者和所属组 `&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意：执行chgrp命令需要root权限，在命令行前面加上sudo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/05/15/RGaBezESCHlyPts.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;## 四、管理用户和组&lt;/p&gt;
&lt;p&gt;###1、管理用户账户&lt;/p&gt;
&lt;p&gt;命令：grep&lt;br&gt;
 &lt;code&gt;cat /etc/passwd | grep 用户名&lt;/code&gt;    通过查看用户配置文件来查找其中包含该用户名的文件&lt;br&gt;
&lt;img src=&#34;https://i.loli.net/2021/05/15/sIQTJ4tZc5a2yhD.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;###2、添加用户账户&lt;/p&gt;
&lt;p&gt;命令：useradd、adduser&lt;br&gt;
 &lt;code&gt;useradd -选项 用户名&lt;/code&gt;     添加用户&lt;br&gt;
 - d   用于指定用户主目录&lt;br&gt;
 - g   用于指定该用户的所属组&lt;br&gt;
 - G   用于指定用户所属其他组列表&lt;br&gt;
 - r   用于创建一个系统账户（不会创建主目录，默认为 /bin/bash）&lt;br&gt;
-s   指定用户登录时使用的 shell 脚本&lt;br&gt;
 - u   指定新用户的 UID&lt;br&gt;
 &lt;code&gt;注意：无root使用权限时，在命令行前面加sudo即可&lt;/code&gt; &lt;br&gt;
 - D  用于显示或更改默认的 useradd 配置&lt;br&gt;
 &lt;code&gt;useradd -D 选项&lt;/code&gt;    用于修改默认的 useradd 配置&lt;br&gt;
 - g    表示默认组&lt;br&gt;
 - b   表示默认目录&lt;br&gt;
 - f   表示过期禁用&lt;br&gt;
 - e   表示过期日期&lt;br&gt;
 - s   表示默认 shell&lt;br&gt;
 &lt;code&gt;sudo adduser 用户名&lt;/code&gt;     添加用户并设置相关信息&lt;/p&gt;
&lt;p&gt;###3、管理用户账户密码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;passwd 选项 用户名&lt;/code&gt;    为用户设置密码&lt;br&gt;
例如： &lt;code&gt;passwd wang&lt;/code&gt;    为用户 wang 设置密码&lt;br&gt;
 &lt;code&gt;passwd -l 用户名&lt;/code&gt;    锁定账户密码&lt;br&gt;
 &lt;code&gt;passwd -d 用户名&lt;/code&gt;    删除账户密码&lt;br&gt;
 &lt;code&gt;passwd -S 用户名&lt;/code&gt;    查看某账户当前的状态&lt;br&gt;
 &lt;code&gt;passwd -u 用户名&lt;/code&gt;    解除账户密码锁定&lt;br&gt;
 &lt;code&gt;注意：无root使用权限时，在命令行前面加sudo即可&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;###4、修改用户账户&lt;/p&gt;
&lt;p&gt;命令：usermod、chfn&lt;br&gt;
 &lt;code&gt;usermod 选项 用户名&lt;/code&gt;    修改用户的各项信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;usermod -l 新用户名&lt;/code&gt;  原用户名   更改用于账户名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;usermod -L 用户名&lt;/code&gt;    锁定该用户账户，临时禁止登录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;usermod -U 用户名&lt;/code&gt;    解除锁定&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chfn 选项 用户名&lt;/code&gt;    更改用户的个人信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chfn -f 用户名&lt;/code&gt;    更改用户的全名（真实姓名）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chfn -h 用户名&lt;/code&gt;    更改用户的家庭电话&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chfn -o 用户名&lt;/code&gt;    更改用户的办公地址&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意：无root使用权限时，在命令行前面加sudo即可&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;###5、删除用户账户&lt;/p&gt;
&lt;p&gt;命令：userdel、deluser&lt;br&gt;
 &lt;code&gt;userdel 选项 用户名&lt;/code&gt;     删除用户账户&lt;/p&gt;
&lt;p&gt;&lt;code&gt;userdel -r 用户名&lt;/code&gt;    递归删除该账户下的主目录和邮件目录&lt;/p&gt;
&lt;p&gt;注意：不允许删除正在使用的用户账户 `&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deluser --remove-home 用户名&lt;/code&gt;    表示同时删除用户的主目录和邮箱&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deluser --remove-all-files 用户名&lt;/code&gt;    表示删除用户拥有的所有文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deluser --backup 用户名&lt;/code&gt;    表示删除用户之前将文件备份&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deluser --system 用户名&lt;/code&gt;   表示只有当该用户是系统用户时才删除&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deluser --backup-to 目录名 用户名&lt;/code&gt;    表示指定备份的目标目录&lt;/p&gt;
&lt;p&gt;###6、创建组账户&lt;/p&gt;
&lt;p&gt;命令： groupadd&lt;br&gt;
 &lt;code&gt;groupadd 选项 组名&lt;/code&gt;     创建一个组账户&lt;/p&gt;
&lt;p&gt;&lt;code&gt;groupadd -g 组名&lt;/code&gt;    自行指定组的 GID&lt;/p&gt;
&lt;p&gt;&lt;code&gt;groupadd -r 组名&lt;/code&gt;     创建系统组，GID 值小于 500（不带此选项，则创建的为普通组&lt;br&gt;
）&lt;br&gt;
 &lt;code&gt;addgroup --gid ID 组名&lt;/code&gt;     添加一个普通用户组&lt;/p&gt;
&lt;p&gt;&lt;code&gt;addgroup --system --gid 组 ID 组名 &lt;/code&gt;    添加一个管理员用户组&lt;/p&gt;
&lt;p&gt;###7、修改组账户&lt;/p&gt;
&lt;p&gt;命令： &lt;code&gt;groupmod -g GID -n 新组名 组名&lt;/code&gt;    修改用户组的组名和 GID 值&lt;/p&gt;
&lt;p&gt;###8、删除组账户&lt;/p&gt;
&lt;p&gt;命令：groupdel 、delgroup&lt;br&gt;
 &lt;code&gt;groupdel 组名&lt;/code&gt;    删除用户组&lt;/p&gt;
&lt;p&gt;&lt;code&gt;delgroup ---system 组名&lt;/code&gt;    表示只有当该用户组是系统用户组时才删除&lt;/p&gt;
&lt;p&gt;&lt;code&gt;delgroup --only-if-empty&lt;/code&gt;    表示只有当该用户组中无成员时才删除&lt;/p&gt;
&lt;p&gt;###9、管理组成员&lt;/p&gt;
&lt;p&gt;####9-1、显示某用户所属的全部组&lt;/p&gt;
&lt;p&gt;命令：groups&lt;br&gt;
 &lt;code&gt;注意：如果没有指定用户名则默认为当前登录用户&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;####9-2、将用户添加到指定的组&lt;/p&gt;
&lt;p&gt;命令：gpasswd、adduser&lt;br&gt;
 &lt;code&gt;gpapsswd -a 用户名 组名&lt;/code&gt;    将用户添加到指定的组，使其成为该组的成员&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gpapsswd -d 用户名 组名&lt;/code&gt;    将用户从该组中删除&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gpasswd -M 用户名，用户名，... 组名&lt;/code&gt;    将多个用户添加到该组中，使之成为组成员&lt;/p&gt;
&lt;p&gt;&lt;code&gt;adduser 用户名 组名&lt;/code&gt;    将用户添加到指定的组，使其成为该组的成员&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deluser 用户名 组名&lt;/code&gt;    将用户从该组中删除&lt;/p&gt;
&lt;p&gt;###10、查看其它用户管理命令&lt;/p&gt;
&lt;p&gt;####10-1、查看用户信息&lt;/p&gt;
&lt;p&gt;命令：id&lt;br&gt;
 &lt;code&gt;id 选项 用户名&lt;/code&gt;    查看指定用户或当前用户的信息&lt;br&gt;
 &lt;code&gt;注意：若不指定用户名，则将显示当前登录的用户的信息，若指定用户名，则显示该账户信息&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;####10-2、查看登录用户&lt;/p&gt;
&lt;p&gt;命令：who 、last、w&lt;br&gt;
 &lt;code&gt;who    显示当前登陆的用户账户&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;last   查看系统的历史登陆情况&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;last 用户名   查看某个用户的历史登陆情况&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;last -n   查看系统最近几次的登陆情况&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;w   查看用户的执行进程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;## 五、编译 C 程序&lt;/p&gt;
&lt;p&gt;###1、安装 gcc 编译器&lt;/p&gt;
&lt;p&gt;命令： &lt;code&gt;sudo apt install gcc&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;注意：安装之后可以用该命令查看版本:gcc -v&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;###2、开始编译&lt;/p&gt;
&lt;p&gt;命令： &lt;code&gt;gcc 选项 源文件 &lt;/code&gt; 注意：保存源文件时将拓展名设置为文件名.c`&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo gcc -o 源文件名称&lt;/code&gt;    对该源文件进行预处理、编译、汇编并连接形成可执行文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-E  对源文件进行预处理，生成名为文件名.i的源代码文件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-S 对源文件进行预处理和编译，生成名为文件名.s的汇编代码文件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-c 对源文件进行预处理、编译和汇编，生成名为.c同名目标文件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意：若无指定输出文件，则默认输出文件名为 a.out&lt;/p&gt;
&lt;p&gt;###3、在命令行中执行程序&lt;/p&gt;
&lt;p&gt;命令： &lt;code&gt;./文件名&lt;/code&gt;    完成编译和连接后在命令行中执行&lt;/p&gt;
</content>
        <category term="基本命令" />
        <updated>2021-05-04T12:15:56.000Z</updated>
    </entry>
</feed>
